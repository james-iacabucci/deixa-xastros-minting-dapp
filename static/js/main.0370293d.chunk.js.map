{"version":3,"sources":["Assets/background4.png","Assets/Logos/Xastro.png","Config/AppConfig.js","Config/CollectionConfig.js","Assets/Logos/DeixaFlat.png","Components/Header/Header.js","Components/CollectionInfo/CollectionInfo.js","Components/MintingControls/MintingControls.js","Assets/background3.png","Components/Utils/StringUtils.js","Components/Nft/index.js","Components/MyAssets/index.js","Components/Onramper/index.js","Components/Status/LoadingCollectionInfo.js","Components/Status/NoContractFound.js","Components/Status/NoWalletConnected.js","Components/Status/ProcessingTransaction.js","Components/Status/MessageCard.js","Components/Status/SaleClosed.js","Components/Status/SoldOut.js","Components/Status/SomethingWentWrong.js","Components/Status/TransactionComplete.js","Components/Status/WrongNetwork.js","Components/App/App.js","index.js","Components/Utils/Freelist.js","Components/Utils/Goldlist.js"],"names":["AppConfig","moralisAppId","process","moralisServerUrl","web3AuthClientId","supportChainId","supportChainName","nftContract","isMainnet","isMyAssetsEnabled","isFiatEnabled","CollectionConfig","contractName","contractAddress","openSeaURL","Header","values","userWallet","signOut","setError","isTestNet","processing","setProcessing","nftContractOptions","viewMyAssets","buyEth","useMoralis","isAuthenticated","Moralis","account","chain","useChain","openInNewTab","url","window","open","newState","executeFunction","params","_state","functionName","tx","wait","location","reload","console","error","useState","anchorEl","setAnchorEl","Boolean","handleClose","AppBar","position","elevation","sx","backgroundColor","Toolbar","Link","cursor","onClick","src","logo","alt","style","width","Stack","spacing","direction","alignItems","marginLeft","Chip","variant","color","label","display","xs","md","name","Tooltip","title","substring","toUpperCase","slice","navigator","clipboard","writeText","formatted","motionDistance","Button","size","IconButton","event","currentTarget","undefined","MenuOutlined","ownerAddress","userAddress","top","bottom","setCollectionPaused","isMintingPaused","withdrawFunds","toLowerCase","Menu","id","onClose","PaperProps","overflow","filter","mt","height","ml","mr","content","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","Typography","Divider","CollectionInfo","CardContent","Grid","container","item","align","saleStage","isReleased","maxSupply","totalSupply","isFreelistMintEnabled","isGoldlistMintEnabled","isUserInFreelist","isUserInGoldlist","nftWallet","length","join","MintingControls","mintAmount","setMintAmount","mintNFT","marginTop","Box","flexDirection","justifyContent","ButtonGroup","fullWidth","Math","max","min","maxMintAmountPerTx","fontSize","fontWeight","Units","FromWei","tokenPrice","toFixed","endIcon","StringUtils","uri","startsWith","replaceAll","Nft","nft","metadata","Card","border","borderColor","CardMedia","component","image","convertIpfsUriToIpfsUrl","Background","py","borderRadius","onError","e","target","onerror","token_id","description","DialogActions","token_address","MyAssets","nfts","setNfts","useEffect","Web3API","getNFTsForContract","address","response","result","fetchNfts","map","JSON","parse","CircularProgress","Onramper","fiatUrl","setFiatUrl","getFiatPlugin","Plugins","fiat","buy","coin","receiver","disableTriggers","data","frameborder","allow","LoadingCollectionInfo","textAlign","LinearProgress","NoContractFound","NoWalletConnected","signIn","ethereum","CardActions","TransactionProcessing","transaction","MessageCard","props","padding","children","SaleClosed","SoldOut","collectionUrl","SomethingWentWrong","onBuyEth","message","includes","code","formatErrorMessage","TransactionComplete","acknowledge","WrongNetwork","network","nftContractAbi","require","abi","defaultState","userBalance","networkConfig","BigNumber","from","isPreSaleMintEnabled","merkleProofManualAddress","merkleProofManualAddressFeedbackMessage","App","useSearchParams","searchParam","get","promotionCode","setValues","setTransaction","contractFound","setContractFound","transactionCompleted","setTransactionCompleted","shouldShowMyAssets","setShowMyAssets","shouldShowBuyEth","setShowBuyEth","chainId","useNativeBalance","authenticate","logout","isWeb3Enabled","enableWeb3","isWeb3EnableLoading","msgValue","getProviderParam","providerId","provider","clientId","appLogo","localStorage","setItem","removeItem","initWallet","log","cost","owner","toNumber","_owner","prevValues","Freelist","contains","Goldlist","amount","promoCode","_mintAmount","_merkleProof","getProofForAddress","_promotionCode","mul","hash","shouldShow","onShowBuyEth","getItem","initialize","unsubAccountChanged","onAccountChanged","unsubChainChanged","onChainChanged","isMainNet","isWalletConnected","isSoldOut","Container","disableGutters","maxWidth","backgroundImage","background","fixed","raised","href","XastroLogo","Dialog","minHeight","DialogTitle","CloseOutlined","DialogContent","appTheme","createTheme","palette","mode","primary","main","ReactDOM","render","StrictMode","theme","appId","serverUrl","document","getElementById","this","merkleTree","leafNodes","freelistAddresses","addr","keccak256","MerkleTree","sortPairs","getMerkleTree","getHexProof","toString","getLeafIndex","Buffer","goldlistAddresses"],"mappings":"2ioEAAe,MAA0B,wCCA1B,MAA0B,mCCY1BA,EAZG,CAChBC,aAAcC,2CACdC,iBAAkBD,kDAClBE,iBAAkBF,0FAClBG,eAAgBH,MAChBI,iBAAkBJ,UAClBK,YAAaL,6CACbM,WAAWN,EACXO,mBAAmBP,EACnBQ,eAAeR,GCDFS,EANU,CACvBC,aAAc,wBACdC,gBAAiBb,EAAUO,YAC3BO,WAAY,6C,wFCLC,MAA0B,sC,OCoB1B,SAASC,EAAT,GAA4I,IAA1HC,EAAyH,EAAzHA,OAAQC,EAAiH,EAAjHA,WAAYC,EAAqG,EAArGA,QAASC,EAA4F,EAA5FA,SAAUC,EAAkF,EAAlFA,UAAWC,EAAuE,EAAvEA,WAAYC,EAA2D,EAA3DA,cAAeC,EAA4C,EAA5CA,mBAAoBC,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,OAC9I,EAA8CC,cAAtCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,QAC1BC,EAAUC,cAAVD,MAER,SAASE,EAAaC,GACpBC,OAAOC,KAAKF,EAAK,SAAU,uBAL2H,sDAQxJ,WAAmCG,GAAnC,0GAEqBR,EAAQS,gBAAR,2BAA6Bd,GAA7B,IAAiDe,OAAQ,CAAEC,OAAQH,GAAYI,aAAc,eAFlH,cAEUC,EAFV,OAGInB,GAAc,GAHlB,SAIUmB,EAAGC,OAJb,OAKIpB,GAAc,GACdY,OAAOS,SAASC,SANpB,kDAQIC,QAAQC,MAAR,MACA3B,EAAS,EAAD,IACRG,GAAc,GAVlB,2DARwJ,4EAsBxJ,uHAEqBM,EAAQS,gBAAR,2BAA6Bd,GAA7B,IAAiDiB,aAAc,cAFpF,cAEUC,EAFV,OAGInB,GAAc,GAHlB,SAIUmB,EAAGC,OAJb,OAKIpB,GAAc,GACdY,OAAOS,SAASC,SANpB,kDAQIC,QAAQC,MAAR,MACA3B,EAAS,EAAD,IACRG,GAAc,GAVlB,2DAtBwJ,sBAoCxJ,MAAgCyB,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMd,EAAOe,QAAQF,GAIfG,EAAc,WAClBF,EAAY,OAGd,OACE,eAAC,WAAD,WACE,cAACG,EAAA,EAAD,CAAQC,SAAS,QAAQC,UAAW,EAAGC,GAAI,CAAEC,gBAAiB,SAA9D,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAMH,GAAI,CAAEI,OAAQ,WAAaC,QAAS,kBAAM5B,EAAa,qBAA7D,SACE,qBAAK6B,IAAKC,EAAMC,IAAI,OAAOC,MAAO,CAAEC,MAAO,aAE5CpC,GAAWF,GACV,eAACuC,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,MAAMC,WAAY,SAAUd,GAAI,CAAEe,WAAY,QAA3E,UACGtE,EAAUS,mBAAqB,cAAC8D,EAAA,EAAD,CAAMC,QAAQ,WAAWC,MAAM,UAAUC,MAAM,YAAYnB,GAAI,CAAEoB,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAYjB,QAAS,kBAAMpC,GAAa,MACnKxB,EAAUU,eAAiB,cAAC6D,EAAA,EAAD,CAAMC,QAAQ,WAAWC,MAAM,UAAUC,MAAM,UAAUnB,GAAI,CAAEoB,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAYjB,QAAS,kBAAMnC,GAAO,MACxJ,cAAC8C,EAAA,EAAD,CAAMC,QAAQ,WAAWC,MAAM,UAAUC,MAAK,OAAE5C,QAAF,IAAEA,OAAF,EAAEA,EAAOgD,KAAMvB,GAAI,CAAEoB,QAAS,CAAEC,GAAI,OAAQC,GAAI,WAC9F,cAACE,EAAA,EAAD,CAASC,MAAOnD,GAAoB,MAApC,SACE,cAAC0C,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,UACNC,MAAK,iBAAK7C,QAAL,IAAKA,OAAL,EAAKA,EAASoD,UAAU,EAAG,GAAGC,cAA9B,sBAAkDrD,QAAlD,IAAkDA,OAAlD,EAAkDA,EAASsD,OAAO,GAAGD,eAC1E3B,GAAI,CAAEoB,QAAS,CAAEC,GAAI,OAAQC,GAAI,SACjCjB,QAAS,kBAAMwB,UAAUC,UAAUC,UAAUzD,QAGjD,cAAC0C,EAAA,EAAD,CAAMC,QAAQ,WAAWC,MAAM,UAAUC,MAAK,OAAEzD,QAAF,IAAEA,OAAF,EAAEA,EAAYsE,UAAWhC,GAAI,CAAEoB,QAAS,CAAEC,GAAI,OAAQC,GAAI,OAAQW,eAAgB,WAC/H7D,GACC,cAAC8D,EAAA,EAAD,CAAQjB,QAAQ,YAAYkB,KAAK,QAAQ9B,QAAS,kBAAM1C,KAAWqC,GAAI,CAAEoB,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAApG,wBAKF,cAACc,EAAA,EAAD,CACE/B,QApCM,SAACgC,GACnB3C,EAAY2C,EAAMC,gBAoCNH,KAAK,QACLjB,MAAM,UACNlB,GAAI,CAAEoB,QAAS,CAAEC,GAAI,OAAQC,GAAI,SACjC,gBAAe1C,EAAO,oBAAiB2D,EACvC,gBAAc,OACd,gBAAe3D,EAAO,YAAS2D,EAPjC,SASE,cAACC,EAAA,EAAD,eAOR1E,GAAcM,GAAmBE,GAAWb,EAAOgF,eAAiBhF,EAAOiF,aAC3E,cAAC7C,EAAA,EAAD,CAAQC,SAAS,QAAQC,UAAW,EAAGC,GAAI,CAAE2C,IAAK,OAAQC,OAAQ,EAAG3C,gBAAiB,SAAtF,SACE,cAACC,EAAA,EAAD,CAASF,GAAI,CAAEC,gBAAiB,SAAhC,SACE,eAACU,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,MAA7B,UACE,cAACqB,EAAA,EAAD,CAAQC,KAAK,QAAQlB,QAAQ,YAAYjB,GAAI,CAAEkB,MAAO,SAAWb,QAAS,kBA7FkE,2CA6F5DwC,EAAoBpF,EAAOqF,kBAA3G,SACGrF,EAAOqF,gBAAkB,iBAAmB,kBAE/C,cAACZ,EAAA,EAAD,CAAQC,KAAK,QAAQlB,QAAQ,YAAYjB,GAAI,CAAEkB,MAAO,SAAWb,QAAS,kBAhGkE,0CAgG5D0C,IAAhF,4BAGA,cAACb,EAAA,EAAD,CACEC,KAAK,QACLlB,QAAQ,YACRjB,GAAI,CAAEkB,MAAO,SACbb,QAAS,kBAAM5B,EAAa,WAAD,OAAYZ,IAAS,UAAQpB,EAAUM,iBAAiBiG,cAAnC,KAAsD,GAA3E,gCAAqGhF,EAAmBV,mBAJrJ,kCAcR,eAAC2F,EAAA,EAAD,CACExD,SAAUA,EACVyD,GAAG,eACHtE,KAAMA,EACNuE,QAASvD,EACTS,QAAST,EACTwD,WAAY,CACVrD,UAAW,EACXC,GAAI,CACFqD,SAAU,UACVC,OAAQ,4CACRC,GAAI,IACJ,oBAAqB,CACnB7C,MAAO,GACP8C,OAAQ,GACRC,IAAK,GACLC,GAAI,GAEN,WAAY,CACVC,QAAS,KACTvC,QAAS,QACTtB,SAAU,WACV6C,IAAK,EACLiB,MAAO,GACPlD,MAAO,GACP8C,OAAQ,GACRK,QAAS,mBACTC,UAAW,iCACXC,OAAQ,KAIdC,gBAAiB,CAAEC,WAAY,QAASC,SAAU,OAClDC,aAAc,CAAEF,WAAY,QAASC,SAAU,UAjCjD,UAmCE,cAACE,EAAA,EAAD,CAAU/D,QAAS,kBAAMwB,UAAUC,UAAUC,UAAUzD,IAAvD,SACE,eAAC+F,EAAA,EAAD,CAAYpD,QAAQ,YAAYC,MAAM,UAAtC,uCACe5C,QADf,IACeA,OADf,EACeA,EAASoD,UAAU,EAAG,GAAGC,cADxC,sBAC4DrD,QAD5D,IAC4DA,OAD5D,EAC4DA,EAASsD,OAAO,GAAGD,oBAGjF,cAACyC,EAAA,EAAD,iBAAW1G,QAAX,IAAWA,OAAX,EAAWA,EAAYsE,YACvB,cAACoC,EAAA,EAAD,iBAAW7F,QAAX,IAAWA,OAAX,EAAWA,EAAOgD,OACjB9E,EAAUU,eACT,cAACiH,EAAA,EAAD,CAAU/D,QAAS,kBAAMnC,GAAO,IAAhC,SACE,cAACmG,EAAA,EAAD,CAAYpD,QAAQ,YAAYC,MAAM,UAAtC,uBAKHzE,EAAUS,mBACT,cAACkH,EAAA,EAAD,CAAU/D,QAAS,kBAAMpC,GAAa,IAAtC,SACE,cAACoG,EAAA,EAAD,CAAYpD,QAAQ,YAAYC,MAAM,UAAtC,yBAKH9C,GAAmB,cAACkG,EAAA,EAAD,IACnBlG,GACC,cAACgG,EAAA,EAAD,CAAU/D,QAAS,kBAAM1C,KAAzB,SACE,cAAC0G,EAAA,EAAD,CAAYpD,QAAQ,YAAYC,MAAM,UAAtC,gC,kCC7LG,SAASqD,EAAT,GAAqC,IAAD,IAAV9G,EAAU,EAAVA,OACvC,OACE,cAAC+G,EAAA,EAAD,CAAajB,GAAI,EAAjB,SACE,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAAC9D,QAAS,EAAzB,UACE,cAAC6D,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,EAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAApB,yBAEF,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,EAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAAQ2D,MAAM,QAAQ1D,MAAM,UAAhD,mBACMzD,EAAOoH,UADb,YAC2BpH,EAAOqH,WAAwB,GAAX,cAIjD,cAACL,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,EAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAApB,2BAEF,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,EAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAAQ2D,MAAM,QAAQ1D,MAAM,UAAhD,SACGzD,EAAOsH,YAActH,EAAOuH,YACzB,WACAvH,EAAOqF,gBACP,SACErF,EAAOwH,uBAAyBxH,EAAOyH,sBAExCzH,EAAOwH,uBAAyBxH,EAAO0H,kBAAsB1H,EAAOyH,uBAAyBzH,EAAO2H,iBACrG,WACA,eAHA,WAOR,cAACX,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,EAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAApB,8BAEF,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,EAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAAQ2D,MAAM,QAAQ1D,MAAM,UAAhD,mBACMzD,EAAOuH,YADb,eAC+BvH,EAAOsH,eAIxC,cAACN,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,EAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAApB,iCAEF,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,EAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAAQ2D,MAAM,QAAQ1D,MAAM,UAAhD,SACG,UAAAzD,EAAO4H,iBAAP,SAAkBC,OAAS,eAAM7H,EAAO4H,iBAAb,aAAM,EAAkBE,KAAK,QAAS,gC,gCC1C/D,SAASC,EAAT,GAA0E,IAA/C/H,EAA8C,EAA9CA,OAAQgI,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,QACnEtH,EAAYF,cAAZE,QAKR,OACE,cAACmG,EAAA,EAAD,CAAaxE,GAAI,CAAE4F,UAAW,OAA9B,SACE,eAACnB,EAAA,EAAD,CAAMC,WAAS,EAAC9D,QAAS,EAAzB,UACE,cAAC6D,EAAA,EAAD,CAAME,MAAI,EAACrD,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACwE,EAAA,EAAD,CAAKzE,QAAQ,OAAO0E,cAAc,SAAShF,WAAW,SAASiF,eAAe,SAA9E,SACE,eAACC,EAAA,EAAD,CAAa/E,QAAQ,YAAY2D,MAAM,SAAvC,UACE,cAAC1C,EAAA,EAAD,CAAQjB,QAAQ,YAAYjB,GAAI,CAAEkB,MAAO,SAAW+E,WAAS,EAAC5F,QAAS,kBATjDqF,EAAcQ,KAAKC,IAAI,EAAGV,EAAa,KAS7D,eAGA,cAACvD,EAAA,EAAD,CAAQjB,QAAQ,YAAYjB,GAAI,CAAEkB,MAAO,SAAW+E,WAAS,EAA7D,mBAAkER,KAClE,cAACvD,EAAA,EAAD,CAAQjB,QAAQ,YAAYjB,GAAI,CAAEkB,MAAO,SAAW+E,WAAS,EAAC5F,QAAS,kBAdjDqF,EAAcQ,KAAKE,IAAI3I,EAAO4I,mBAAoBZ,EAAa,KAcrF,sBAMN,eAAChB,EAAA,EAAD,CAAME,MAAI,EAACrD,GAAI,EAAGD,GAAI,GAAtB,UACE,cAACgD,EAAA,EAAD,CAAYd,GAAI,GAAKtC,QAAQ,QAAQ2D,MAAM,SAAS0B,SAAU,OAAQC,WAAY,OAAQrF,MAAM,UAAhG,oBAnBe7C,EAAQmI,MAAMC,QAAQhJ,EAAOiJ,WAAY,IAAMjB,GAoB7CkB,QAAQ,GADzB,UAGA,cAACtC,EAAA,EAAD,CAAYd,IAAK,GAAKqB,MAAM,SAAS0B,SAAU,GAA/C,2BAIF,cAAC7B,EAAA,EAAD,CAAME,MAAI,EAACrD,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CAAQ+D,WAAS,EAAChF,QAAQ,YAAYjB,GAAI,CAAEkB,MAAO,SAAWb,QAAS,kBAAMsF,EAAQF,IAAamB,QAAS,cAAC,IAAD,IAA3G,yB,eCpCK,OAA0B,wC,gBCApBC,G,8GACnB,SAA+BC,GAC7B,OAAIA,EAAIC,WAAW,gBACX,wBAAN,OAA+BD,EAAIE,WAAW,eAAgB,KACrDF,EAAIC,WAAW,WAClB,wBAAN,OAA+BD,EAAIE,WAAW,UAAW,KAElDF,M,KCDE,SAASG,GAAT,GAAiC,IAAlBC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,SAKjC,OACE,eAACC,EAAA,EAAD,CAAMrH,UAAW,EAAGC,GAAI,CAAEqH,OAAQ,EAAGC,YAAa,QAASjE,SAAU,WAArE,UACE,cAACkE,EAAA,EAAD,CACEC,UAAU,MACVC,MAAON,EAAWN,GAAYa,wBAAwBP,EAASM,OAASE,GACxE3H,GAAI,CAAE6D,QAAS,QAAS+D,GAAI,EAAGC,aAAc,eAC7CC,QAVmB,SAACC,GACxBA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAO1H,IAAMqH,MAUb,cAACnD,EAAA,EAAD,CAAajB,GAAI,EAAjB,SACE,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAAC9D,QAAS,EAAzB,UACE,cAAC6D,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,GAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAAQC,MAAM,UAAlC,SACGiG,EAAWA,EAAS5F,KAAZ,UAAsB2F,EAAI3F,KAA1B,aAAmC2F,EAAIgB,cAGpD,cAACzD,EAAA,EAAD,CAAME,MAAI,EAACtD,GAAI,GAAf,SACE,cAACgD,EAAA,EAAD,CAAYpD,QAAQ,QAApB,SAA6BkG,EAAWA,EAASgB,YAAcjB,EAAIgB,kBAIzE,cAACE,EAAA,EAAD,CAAe3H,MAAO,CAAEsF,eAAgB,UAAxC,SACE,cAAC7D,EAAA,EAAD,CACE7B,QAAS,kBACP1B,OAAOC,KAAP,kBACcnC,EAAUQ,UAA6D,GAAxE,UAA0BR,EAAUM,iBAAiBiG,cAArD,KADb,8BAC6GkE,EAAImB,cADjH,cACoInB,EAAIgB,UACtI,SACA,wBAGJhH,MAAM,UARR,oCCzBO,SAASoH,KACtB,MAA8CnK,cAAtCC,EAAR,EAAQA,gBAAiBE,EAAzB,EAAyBA,QAASD,EAAlC,EAAkCA,QAClC,EAAwBmB,qBAAxB,mBAAO+I,EAAP,KAAaC,EAAb,KAsBA,OApBAC,qBAAU,WAAM,sDACd,uHAE2BpK,EAAQqK,QAAQpK,QAAQqK,mBAAmB,CAChEpK,MAAO9B,EAAUK,eACjB8L,QAAStK,EACT+J,cAAejL,EAAiBE,kBALtC,OAEUuL,EAFV,OAQML,EADEK,EACMA,EAASC,OAET,IAVd,gDAaIN,EAAQ,IAbZ,0DADc,uBAAC,WAAD,wBAiBdO,KACC,CAAC3K,EAAiBE,EAASD,EAAQqK,QAAQpK,UAEvCiK,EACLA,EAAKjD,OAAS,EACZ,cAACb,EAAA,EAAD,CAAMC,WAAS,EAAC9D,QAAS,EAAzB,SACG2H,EAAKS,KAAI,SAAC9B,GAAD,OACR,cAACzC,EAAA,EAAD,CAAyBE,MAAI,EAACrD,GAAI,EAAGD,GAAI,GAAzC,SACE,cAAC4F,GAAD,CAAKC,IAAKA,EAAKC,SAAUD,EAAIC,UAAY8B,KAAKC,MAAMhC,EAAIC,aAD/CD,EAAIgB,eAMnB,cAACrC,EAAA,EAAD,CAAKzE,QAAQ,OAAON,WAAW,SAASiF,eAAe,SAASxC,GAAI,EAApE,SACE,cAACc,EAAA,EAAD,CAAYpD,QAAQ,QAApB,mCAIJ,cAAC4E,EAAA,EAAD,CAAKzE,QAAQ,OAAON,WAAW,SAASiF,eAAe,SAASxC,GAAI,EAApE,SACE,cAAC4F,GAAA,EAAD,MC3CS,SAASC,KACtB,MAA6BjL,cAArBG,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,QACjB,EAA8BmB,qBAA9B,mBAAO6J,EAAP,KAAgBC,EAAhB,KAkBA,OAjBAb,qBAAU,WACR,IAAMc,EAAa,iDAAG,iGACflL,EAAQmL,QAAQC,KADD,iEAECpL,EAAQmL,QAAQC,KAAKC,IACxC,CACEC,KAAM,MACNC,SAAUtL,GAEZ,CACEuL,iBAAiB,IARD,OAEhBhB,EAFgB,OAWpBS,EAAWT,EAASiB,MAXA,2CAAH,qDAanBP,MACC,CAAClL,EAAQmL,QAAQC,KAAMnL,IAGxB,8BACG+K,GACC,wBACE/I,IAAK+I,EACL7F,OAAO,QACP9C,MAAM,QACNe,MAAM,mBACNsI,YAAY,IACZC,MAAM,0D,eC9BD,SAASC,KACtB,OACE,cAACzF,EAAA,EAAD,CAAajB,GAAI,EAAjB,SACE,eAAC5C,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAACyD,EAAA,EAAD,CAAYpD,QAAQ,QAAQiJ,UAAW,SAAvC,mDAGA,cAACrE,EAAA,EAAD,CAAK7F,GAAI,CAAEU,MAAO,QAAlB,SACE,cAACyJ,GAAA,EAAD,WCRK,SAASC,KACtB,OACE,cAAC5F,EAAA,EAAD,CAAajB,GAAI,EAAjB,SACE,eAAC5C,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAACyD,EAAA,EAAD,CAAYpD,QAAQ,QAAQiJ,UAAW,SAAvC,mCAGA,cAAC7F,EAAA,EAAD,CAAYpD,QAAQ,QAAQiJ,UAAW,SAAvC,wDAGA,cAAC7F,EAAA,EAAD,CAAYpD,QAAQ,QAAQiJ,UAAW,SAAvC,qF,eCVO,SAASG,GAAT,GAAwC,IAAXC,EAAU,EAAVA,OAC1C,OACE,qCACE,cAAC9F,EAAA,EAAD,CAAajB,GAAI,EAAjB,SACE,cAACc,EAAA,EAAD,CAAYpD,QAAQ,QAAQ2D,MAAM,SAAlC,gEAK0B,qBAApBjG,OAAO4L,UACb,cAACC,GAAA,EAAD,UACE,cAACtI,EAAA,EAAD,CAAQ+D,WAAS,EAACjG,GAAI,CAAEkB,MAAO,SAAWD,QAAQ,YAAYZ,QAAS,kBAAMiK,EAAO,aAApF,wBAMJ,cAACE,GAAA,EAAD,UACE,cAACtI,EAAA,EAAD,CAAQ+D,WAAS,EAACjG,GAAI,CAAEkB,MAAO,SAAWD,QAAQ,YAAYZ,QAAS,kBAAMiK,EAAO,kBAApF,6BAKF,cAACE,GAAA,EAAD,UACE,cAACtI,EAAA,EAAD,CAAQ+D,WAAS,EAACjG,GAAI,CAAEkB,MAAO,SAAWD,QAAQ,YAAYZ,QAAS,kBAAMiK,EAAO,aAApF,+BCvBO,SAASG,GAAT,GAA4D,IAA3BC,EAA0B,EAA1BA,YAAa7M,EAAa,EAAbA,UAG3D,OACE,cAAC2G,EAAA,EAAD,CAAajB,GAAI,EAAjB,SACE,eAAC5C,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAACyD,EAAA,EAAD,CAAYpD,QAAQ,KAAKC,MAAM,UAAUqF,WAAW,OAAO3B,MAAM,SAAjE,yCAGA,cAACP,EAAA,EAAD,CAAYpD,QAAQ,QAAQiJ,UAAW,SAAvC,yGAGA,cAAC7F,EAAA,EAAD,CAAYpD,QAAQ,QAAQiJ,UAAW,SAAvC,6JAGA,cAAClJ,EAAA,EAAD,CAAMhB,GAAI,CAAEsG,SAAU,GAAKnF,MAAOuJ,IAClC,cAACxI,EAAA,EAAD,CACEjB,QAAQ,YACRjB,GAAI,CAAEkB,MAAO,SACb+E,WAAS,EACT9D,KAAK,QACL9B,QAAS,kBApBK3B,EAoBc,WAAD,OAAYb,IAAS,UAAQpB,EAAUM,iBAAiBiG,cAAnC,KAAsD,GAA3E,2BAAgG0H,GApBrG/L,OAAOC,KAAKF,EAAK,SAAU,uBAApC,IAACA,GAehB,gDASA,cAACmH,EAAA,EAAD,CAAKtC,GAAI,EAAGvD,GAAI,CAAEU,MAAO,QAAzB,SACE,cAACyJ,GAAA,EAAD,WC3BK,SAASQ,GAAYC,GAClC,OACE,cAACxD,EAAA,EAAD,CACEpH,GAAI,CACFqH,OAAQ,IACRC,YAAa,QACbxH,SAAU,WACVsB,QAAS,OACTyJ,QAAS,MACT/E,cAAe,SACfC,eAAgB,SAChB9F,gBAAiB2K,EAAM3K,gBAAkB2K,EAAM3K,gBAAkB,QACjEa,WAAY,UAVhB,SAaG8J,EAAME,WCdE,SAASC,KACtB,OACE,cAACJ,GAAD,UACE,cAACtG,EAAA,EAAD,CAAYpD,QAAQ,QAAQC,MAAM,UAAU0D,MAAM,SAAlD,wECHS,SAASoG,GAAT,GAA+C,EAA5BnN,UAA4B,EAAjBoN,cAG3C,OACE,eAACN,GAAD,WACE,cAACtG,EAAA,EAAD,CAAYpD,QAAQ,QAAQC,MAAM,UAAU0D,MAAM,SAAlD,yCAGA,cAACP,EAAA,EAAD,CAAYpD,QAAQ,QAAQC,MAAM,UAAU0D,MAAM,SAAlD,sFCTS,SAASsG,GAAT,GAA4D,IAA9B3L,EAA6B,EAA7BA,MAAO3B,EAAsB,EAAtBA,SAAUuN,EAAY,EAAZA,SAkB5D,OACE,qCACE,cAAC3G,EAAA,EAAD,CAAajB,GAAI,EAAjB,SACE,eAAC5C,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAACyD,EAAA,EAAD,CAAYpD,QAAQ,KAAKC,MAAM,UAAUqF,WAAW,OAAO3B,MAAM,SAAjE,mCAGA,cAACP,EAAA,EAAD,CAAYpD,QAAQ,QAAQ2D,MAAM,SAAlC,SAxBR,SAA4BrF,GAC1B,GAAIA,EAAM6L,QAAQC,SAAS,sBAAuB,MAAO,mDACzD,GAAI9L,EAAM6L,QAAQC,SAAS,oCAAqC,MAAM,6EACtE,GAAI9L,EAAM6L,QAAQC,SAAS,yBAA0B,MAAO,0FAE5D,OAAQ9L,EAAM+L,MACZ,IAAK,qBACH,MAAO,kEACT,KAAK,KACH,MAAO,sDACT,KAAK,MACH,OAAO/L,EAAM6L,QACf,QACE,MAAM,4DAAN,OAAmE7L,EAAM6L,QAAzE,MAYKG,CAAmBhM,UAI1B,cAACiL,GAAA,EAAD,UACkB,uBAAfjL,EAAM+L,KACL,cAACpJ,EAAA,EAAD,CACE+D,WAAS,EACTjG,GAAI,CAAEkB,MAAO,SACbD,QAAQ,YACRZ,QAAO,gCAAE,wFACP8K,IACAvN,EAAS,MAFF,2CAJX,qBAYA,cAACsE,EAAA,EAAD,CAAQ+D,WAAS,EAACjG,GAAI,CAAEkB,MAAO,SAAWD,QAAQ,YAAYZ,QAAS,kBAAMzC,EAAS,OAAtF,qB,yBC1CK,SAAS4N,GAAT,GAAuE,IAAxCd,EAAuC,EAAvCA,YAAae,EAA0B,EAA1BA,YAAa5N,EAAa,EAAbA,UAGtE,OACE,eAAC2G,EAAA,EAAD,CAAajB,GAAI,EAAGvD,GAAI,CAAEqD,SAAU,WAApC,UACE,cAAC,KAAD,IACA,eAAC1C,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAACyD,EAAA,EAAD,CAAYpD,QAAQ,KAAKC,MAAM,UAAUqF,WAAW,OAAO3B,MAAM,SAAjE,8BAGA,cAACP,EAAA,EAAD,CAAYpD,QAAQ,QAAQiJ,UAAW,SAAvC,iDAGA,cAAClJ,EAAA,EAAD,CAAMC,QAAQ,WAAWjB,GAAI,CAAEsG,SAAU,GAAKnF,MAAOuJ,IACrD,cAACxI,EAAA,EAAD,CAAQjB,QAAQ,WAAWgF,WAAS,EAAC9D,KAAK,QAAQ9B,QAAS,kBAb3C3B,EAa8D,WAAD,OAAYb,IAAS,UAAQpB,EAAUM,iBAAiBiG,cAAnC,KAAsD,GAA3E,2BAAgG0H,GAbrJ/L,OAAOC,KAAKF,EAAK,SAAU,uBAApC,IAACA,GAahB,gDAGA,cAACwD,EAAA,EAAD,CAAQ+D,WAAS,EAACjG,GAAI,CAAEkB,MAAO,SAAWD,QAAQ,YAAYZ,QAAS,kBAAMoL,KAA7E,sBClBO,SAASC,GAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,eAAChB,GAAD,WACE,cAACtG,EAAA,EAAD,CAAYpD,QAAQ,QAAQC,MAAM,SAAS0D,MAAM,SAAjD,gDACmC+G,KAEnC,cAACtH,EAAA,EAAD,CAAYpD,QAAQ,QAAQC,MAAM,SAAS0D,MAAM,SAAjD,8CC4BN,IAAMgH,GAAiBC,EAAQ,MAA2CC,IAEpEC,GAAe,CACnBrJ,YAAa,KACbsJ,YAAa,EACbvJ,aAAc,KACdkJ,QAAS,KACTM,cAAe,KACfjH,YAAa,EACbD,UAAW,EACXsB,mBAAoB,EACpBK,WAAYwF,IAAUC,KAAK,GAC3BrJ,gBAAiB,KACjBmC,uBAAuB,EACvBC,uBAAuB,EACvBkH,sBAAsB,EACtBjH,kBAAkB,EAClBC,kBAAkB,EAClBC,UAAW,GACXP,YAAY,EACZD,UAAW,KACXwH,yBAA0B,GAC1BC,wCAAyC,MAgX5BC,OA7Wf,WACE,MAAsCC,cAAtC,mBAAOC,EAAP,KACA,GADA,KAC0CjN,mBAASiN,EAAYC,IAAI,WAAnE,mBAAOC,EAAP,KAEA,GAFA,KAE0BnN,mBAAS,KAAnC,mBAAOD,EAAP,KAAc3B,EAAd,KACA,EAAoC4B,mBAAS,GAA7C,mBAAOiG,EAAP,KAAmBC,EAAnB,KACA,EAA4BlG,mBAASuM,IAArC,mBAAOtO,EAAP,KAAemP,EAAf,KACA,EAAoCpN,oBAAS,GAA7C,mBAAO1B,EAAP,KAAmBC,GAAnB,KACA,GAAsCyB,mBAAS,MAA/C,qBAAOkL,GAAP,MAAoBmC,GAApB,MACA,GAA0CrN,oBAAS,GAAnD,qBAAOsN,GAAP,MAAsBC,GAAtB,MACA,GAAwDvN,oBAAS,GAAjE,qBAAOwN,GAAP,MAA6BC,GAA7B,MACA,GAA8CzN,oBAAS,GAAvD,qBAAO0N,GAAP,MAA2BC,GAA3B,MACA,GAA0C3N,oBAAS,GAAnD,qBAAO4N,GAAP,MAAyBC,GAAzB,MAGc3P,IADMc,cAAZ8O,QACqBC,cAArBzD,MACR,GAA2H3L,cAAnHqP,GAAR,GAAQA,aAAcC,GAAtB,GAAsBA,OAAQC,GAA9B,GAA8BA,cAAeC,GAA7C,GAA6CA,WAAYvP,GAAzD,GAAyDA,gBAAiBwP,GAA1E,GAA0EA,oBAAqBtP,GAA/F,GAA+FA,QAASC,GAAxG,GAAwGA,MAAOF,GAA/G,GAA+GA,QAE3GL,GAAqB,CACvBV,gBAAiBF,EAAiBE,gBAClCwO,IAAKF,GACL3M,aAAc,KACd4O,SAAU,GAoBZ,SAASC,GAAiBC,GACxB,OAAQA,GACN,IAAK,gBAKL,IAAK,WACL,QACE,MAAO,CAAEC,SAAUD,GAJrB,IAAK,WACH,MAAO,CAAEC,SAAUD,EAAYE,SAAUxR,EAAUI,iBAAkByQ,QAAS7Q,EAAUK,eAAgBoR,QAAS3N,IAhD1G,wDAwDb,WAAsBwN,GAAtB,2FACQP,GAAaM,GAAiBC,IADtC,OAEEI,aAAaC,QAAQ,iBAAkBL,GAFzC,4CAxDa,8EA6Db,wGACQN,KADR,OAEEU,aAAaE,WAAW,kBACxBlB,IAAgB,GAChBvP,EAAS,IACTgP,GAAU,kBAAMb,MALlB,4CA7Da,+BAkGEuC,KAlGF,wFAkGb,2HACEhP,QAAQiP,IAAI,0BACZxQ,IAAc,GACd6O,GAAU,kBAAMb,MAEXzN,GALP,uBAMIgB,QAAQiP,IAAI,2CANhB,iCAUMC,EAAO,EACPC,EAAQ,KACR1J,EAAY,EACZC,EAAc,EACdK,EAAY,KACZP,GAAa,EACbuB,EAAqB,EACrBvD,GAAkB,EAClBmC,GAAwB,EACxBC,GAAwB,EACxBkH,GAAuB,EApB7B,oBAwBkB/N,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,WAxBjF,eAwBIwP,EAxBJ,iBAyBuBpQ,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,eAzBtF,2JAyBgB,EAAuFyP,WAzBvG,eAyBI3J,EAzBJ,eA0ByB1G,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,iBA1BxF,2JA0BkB,EAAyFyP,WA1B3G,eA0BI1J,EA1BJ,eA2BgC3G,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,wBA3B/F,2JA2ByB,EAAgGyP,WA3BzH,eA2BIrI,EA3BJ,eA4BiBhI,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,UA5BhF,eA4BIuP,EA5BJ,iBA6B4BnQ,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,YA7B3F,eA6BI6D,EA7BJ,iBA8BkCzE,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,yBA9BjG,eA8BIgG,EA9BJ,iBA+BkC5G,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,yBA/BjG,eA+BIiG,EA/BJ,iBAgCiC7G,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,wBAhChG,eAgCImN,EAhCJ,iBAiCuB/N,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDiB,aAAc,cAjCtF,eAiCI6F,EAjCJ,iBAkCsBzG,GAAQS,gBAAR,2BAA6Bd,IAA7B,IAAiDe,OAAQ,CAAE4P,OAAQrQ,IAAWW,aAAc,mBAlClH,QAkCIoG,EAlCJ,iEAoCI/F,QAAQC,MAAR,MACAwN,IAAiB,GACjBhP,IAAc,GAtClB,2BA0CE6O,GAAU,SAACgC,GAAD,mBAAC,eACNA,GADK,IAERlM,YAAapE,GAAQqD,cACrBc,aAAcgM,EAAM9M,cACpBoD,UAAWA,EACXC,YAAaA,EACbqB,mBAAoBA,EACpBK,WAAY8H,EACZ1L,gBAAiBA,EACjB+B,UAAWI,EAAwB,iBAAmBC,EAAwB,oBAAsBkH,EAAuB,gBAAkB,iBAC7InH,sBAAuBA,EACvBC,sBAAuBA,EACvBkH,qBAAsBA,EACtBjH,iBAAkB0J,IAASC,SAAT,OAAkBxQ,SAAlB,IAAkBA,MAAW,IAC/C8G,iBAAkB2J,IAASD,SAAT,OAAkBxQ,SAAlB,IAAkBA,MAAW,IAC/CwG,WAAYA,EACZO,UAAWA,OAGb0H,IAAiB,GACjBhP,IAAc,GA9DhB,4DAlGa,8EAqKb,WAAuBiR,GAAvB,sFAEQC,EAAYtC,GAAgC,QAFpD,UAKIlP,EAAOwH,sBALX,gCAMoB5G,GAAQS,gBAAR,2BACPd,IADO,IAEVe,OAAQ,CAAEmQ,YAAaF,EAAQG,aAAcN,IAASO,mBAAmB9Q,IAAU+Q,eAAgB,SACnGxB,SAAUpQ,EAAOiJ,WAAW4I,IAAIN,GAChC/P,aAAc,kBAVxB,OAMSC,EANT,kCAYQzB,EAAOyH,sBAZf,kCAaoB7G,GAAQS,gBAAR,2BACPd,IADO,IAEVe,OAAQ,CAAEmQ,YAAaF,EAAQG,aAAcJ,IAASK,mBAAmB9Q,IAAU+Q,eAAgBJ,GACnGpB,SAAUpQ,EAAOiJ,WAAW4I,IAAIN,GAChC/P,aAAc,kBAjBxB,QAaSC,EAbT,gDAmBoBb,GAAQS,gBAAR,2BACPd,IADO,IAEVe,OAAQ,CAAEmQ,YAAaF,EAAQK,eAAgBJ,GAC/CpB,SAAUpQ,EAAOiJ,WAAW4I,IAAIN,GAChC/P,aAAc,UAvBxB,QAmBSC,EAnBT,sBA0BI2N,GAAe3N,EAAGqQ,MAClBtC,IAAwB,GACxBlP,IAAc,GA5BlB,UA6BUmB,EAAGC,OA7Bb,QA8BIpB,IAAc,GACdkP,IAAwB,GA/B5B,kDAiCI3N,QAAQC,MAAR,MACA3B,EAAS,EAAD,IACRG,IAAc,GAnClB,2DArKa,8EA4Mb,+FACE8O,GAAe,MACfI,IAAwB,GAF1B,SAGQqB,KAHR,4CA5Ma,sBAkNb,SAASrQ,GAAauR,GACpBrC,GAAgBqC,GAGlB,SAASC,GAAaD,GACpBnC,GAAcmC,GA7LhB/G,qBAAU,WACRnJ,QAAQiP,IAAI,cAAeb,MAC1B,CAACA,KAEJjF,qBAAU,WACRnJ,QAAQiP,IAAI,gBAAiBnQ,MAC5B,CAACA,KAEJqK,qBAAU,WACRnJ,QAAQiP,IAAI,cAAe5B,KAC1B,CAACA,IAEJlE,qBAAU,WACRnJ,QAAQiP,IAAI,UAAW9Q,KACtB,CAACA,IA8BJgL,qBAAU,WAAM,sDACd,4FACMrK,IAAoBsP,IAAkBE,GAD5C,gCAEUD,GAAWG,GAAiBK,aAAauB,QAAQ,oBAF3D,WAIMtR,KAAmBsP,GAJzB,gCAKUY,KALV,4CADc,uBAAC,WAAD,wBASdqB,GAEA,IAAMC,EAAsBvR,GAAQwR,kBAAiB,SAAUvR,GAC7DgB,QAAQiP,IAAI,8BAA+BjQ,GAC3CK,OAAOS,SAASC,YAGZyQ,EAAoBzR,GAAQ0R,gBAAe,SAAUxR,GACzDe,QAAQiP,IAAI,2BAA4BhQ,GACxCI,OAAOS,SAASC,YAGlB,OAAO,WACLuQ,IACAE,OAGD,CAAC1R,GAAiBsP,GAAepP,GAASC,KA8H7C,IAAMyR,GAAY,kBAAMvT,EAAUQ,WAC5BY,GAAY,kBAAOpB,EAAUQ,WAC7BgT,GAAoB,kBAAkB,OAAZ3R,IAAoBF,IAC9C8R,GAAY,kBAA2B,IAArBzS,EAAOsH,WAAmBtH,EAAOuH,aAAevH,EAAOsH,WAgB/E,OACE,eAACoL,EAAA,EAAD,CAAWC,gBAAc,EAACC,SAAS,QAAnC,UACE,cAAC7S,EAAD,CACEC,OAAQA,EACRE,QArPO,4CAsPPD,WAAYA,GACZG,UAAWA,GACXD,SAAUA,EACVE,WAAYA,EACZC,cAAeA,GACfC,mBAAoBA,GACpBC,aAAcA,GACdC,OAAQuR,KAEV,sBACEhP,MAAO,CACLX,SAAU,WACV0D,OAAQ,QACRpC,QAAS,OACT2E,eAAgB,SAChBjF,WAAY,SACZwP,gBAAgB,OAAD,OAASC,EAAT,MAPnB,UAUE,cAACJ,EAAA,EAAD,CAAWK,OAAO,EAAMH,SAAS,KAAjC,SACE,eAAC1P,EAAA,EAAD,CAAOC,QAAS,EAAGZ,GAAI,CAAEqD,SAAU,WAAnC,UAGE,eAAC+D,EAAA,EAAD,CAAMqJ,QAAQ,EAAM1Q,UAAW,GAAIC,GAAI,CAAEqH,OAAQ,EAAGC,YAAa,QAASjE,SAAU,WAApF,UACE,cAAClD,EAAA,EAAD,CAAMuQ,KAAI,kBAAa7S,KAAS,UAAQpB,EAAUM,iBAAiBiG,cAAnC,KAAsD,GAA5E,gCAAsGhF,GAAmBV,iBAAmB0K,OAAO,SAA7J,SACE,cAACT,EAAA,EAAD,CAAWC,UAAU,MAAMC,MAAOkJ,EAAYnQ,IAAI,eAAeR,GAAI,CAAE6D,QAAS,QAAS+D,GAAI,EAAGC,aAAc,oBA3CvF/J,IAAemS,MA8CZ,cAAC5F,GAAD,CAAmBC,OAlR9C,gDAqOuBxM,GAAcmS,OAAwBnD,IA+CnC,cAAC,GAAD,KA9CDhP,GAAcyB,GAgDX,cAAC2L,GAAD,CAAoB3L,MAAOA,EAAO3B,SAAUA,EAAUuN,SAAU,kBAAMsE,IAAa,MA/CpF3R,IAAe4M,IAiDX,cAACT,GAAD,IAhDJnM,GAAc4M,KAAgBsC,IAkD1B,cAAC,GAAD,CAAuBtC,YAAaA,GAAa7M,UAAWA,MAjDjEC,GAAckP,IAmDX,cAACxB,GAAD,CAAqBd,YAAaA,GAAae,YA5R5E,4CA4RiH5N,UAAWA,MAlDvGC,GAAcmS,MAAuBnD,KAAkBvN,IAAUyN,IAoD9D,cAACzI,EAAD,CAAgB9G,OAAQA,IAEjD,cAAC6G,EAAA,EAAD,KArDuBxG,GATHmS,OAAwBC,OAAgBzS,EAAOqF,iBAAmBgK,KAAmBrP,EAAOqH,YAAckL,OAAkBvS,EAAOqH,aAAekL,QASzGzQ,IAAUyN,IAuD7C,cAACxH,EAAD,CAAiB/H,OAAQA,EAAQgI,WAAYA,EAAYC,cAAeA,EAAeC,QAlShH,mDA4OiB7H,GAAcL,EAAOqF,iBAAmBgK,IA2DvC,cAAC/B,GAAD,KA1DJjN,GAAcoS,MAAepD,IA4D5B,cAAC9B,GAAD,CAASnN,UAAWA,GAAWoN,cAAe7N,EAAiBG,cA3D3DO,GAAcL,EAAOqH,aAAekL,MA6DnC,cAACtE,GAAD,CAAcC,QAAS,sBA5DxB7N,IAAeL,EAAOqH,YAAckL,MA8DnC,cAACtE,GAAD,CAAcC,QAAS,0BAIlD,eAACiF,EAAA,EAAD,CACEhS,KAAMsO,GACN/J,QAAS,kBAAMlF,IAAa,IAC5BgI,WAAS,EACToK,SAAS,KACTjN,WAAY,CACV3C,MAAO,CACLoQ,UAAW,QAPjB,UAWE,cAACC,EAAA,EAAD,UACE,eAACjL,EAAA,EAAD,CAAKzE,QAAQ,OAAO0E,cAAc,MAAMhF,WAAW,SAASiF,eAAe,gBAA3E,UACE,cAAC1B,EAAA,EAAD,CAAYpD,QAAQ,KAApB,uBACA,cAACmB,EAAA,EAAD,CAAY/B,QAAS,kBAAMpC,IAAa,IAAxC,SACE,cAAC8S,EAAA,EAAD,WAIN,cAACC,EAAA,EAAD,UACE,cAAC1I,GAAD,MAED7K,EAAO4H,WAAa5H,EAAO4H,UAAUC,OAAS,GAC7C,eAAC8C,EAAA,EAAD,CAAe3H,MAAO,CAAEW,QAAS,OAAQ0E,cAAe,SAAUhF,WAAY,YAA9E,UACE,cAACoB,EAAA,EAAD,CAAQ7B,QAAS,kBAAM1B,OAAOC,KAAP,kBAAuBf,GAAY,YAAc,IAAjD,OAAsDT,EAAiBG,YAAc,SAAU,wBAAwB2D,MAAM,UAApJ,6BAGA,cAACmD,EAAA,EAAD,CAAYO,MAAM,QAAQ3D,QAAQ,YAAlC,wFAON,eAAC2P,EAAA,EAAD,CACEhS,KAAMwO,GACNjK,QAAS,kBAAMsM,IAAa,IAC5BrM,WAAY,CACV3C,MAAO,CACLoQ,UAAW,QALjB,UASE,cAACC,EAAA,EAAD,UACE,eAACjL,EAAA,EAAD,CAAKzE,QAAQ,OAAO0E,cAAc,MAAMhF,WAAW,SAASiF,eAAe,gBAA3E,UACE,cAAC1B,EAAA,EAAD,CAAYpD,QAAQ,OACpB,cAACmB,EAAA,EAAD,CAAY/B,QAAS,kBAAMoP,IAAa,IAAxC,SACE,cAACsB,EAAA,EAAD,WAIN,cAACC,EAAA,EAAD,UACE,cAAC5H,GAAD,gBC1ZN6H,I,QAAWC,YAAY,CAC3BC,QAAS,CACPC,KAAM,QACNC,QAAS,CACPC,KAAM,eAKZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,MAAOT,GAAtB,SACE,cAAC,IAAD,CAAiBU,MAAOlV,EAAUC,aAAckV,UAAWnV,EAAUG,iBAArE,SACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRiV,SAASC,eAAe,U,oGCzBX,qGAGb,WACE,QAAwBvP,IAApBwP,KAAKC,WAA0B,CACjC,IAAMC,EAAYC,EAAkBlJ,KAAI,SAACmJ,GAAD,OAAUC,IAAUD,MAC5DJ,KAAKC,WAAa,IAAIK,aAAWJ,EAAWG,IAAW,CAAEE,WAAW,IAEtE,OAAOP,KAAKC,aARD,gCAWb,SAAmBpJ,GACjB,OAAOmJ,KAAKQ,gBAAgBC,YAAYJ,IAAUxJ,MAZvC,mCAeb,SAAsBA,GACpB,OAAOmJ,KAAK3C,mBAAmBxG,GAAS6J,WAAWzL,WAAW,IAAK,IAAIA,WAAW,IAAK,MAhB5E,sBAmBb,SAAS4B,GACP,OAAOmJ,KAAKQ,gBAAgBG,aAAaC,EAAOxG,KAAKiG,IAAUxJ,MAAc,MApBlE,Q,6HCAA,qGAGb,WACE,QAAwBrG,IAApBwP,KAAKC,WAA0B,CACjC,IAAMC,EAAYW,EAAkB5J,KAAI,SAACmJ,GAAD,OAAUC,IAAUD,MAC5DJ,KAAKC,WAAa,IAAIK,aAAWJ,EAAWG,IAAW,CAAEE,WAAW,IAEtE,OAAOP,KAAKC,aARD,gCAWb,SAAmBpJ,GACjB,OAAOmJ,KAAKQ,gBAAgBC,YAAYJ,IAAUxJ,MAZvC,mCAeb,SAAsBA,GACpB,OAAOmJ,KAAK3C,mBAAmBxG,GAAS6J,WAAWzL,WAAW,IAAK,IAAIA,WAAW,IAAK,MAhB5E,sBAmBb,SAAS4B,GACP,OAAOmJ,KAAKQ,gBAAgBG,aAAaC,EAAOxG,KAAKiG,IAAUxJ,MAAc,MApBlE,Q","file":"static/js/main.0370293d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background4.75e56f56.png\";","export default __webpack_public_path__ + \"static/media/Xastro.0b4efdea.png\";","const AppConfig = {\n  moralisAppId: process.env.REACT_APP_MORALIS_APPLICATION_ID,\n  moralisServerUrl: process.env.REACT_APP_MORALIS_SERVER_URL,\n  web3AuthClientId: process.env.REACT_APP_WEB3_AUTH_CLIENT_ID,\n  supportChainId: process.env.REACT_APP_SUPPORT_CHAIN_ID_HEX,\n  supportChainName: process.env.REACT_APP_SUPPORT_CHAIN_NAME,\n  nftContract: process.env.REACT_APP_NFT_CONTRACT_ADDRESS,\n  isMainnet: process.env.REACT_APP_MAINNET === '1',\n  isMyAssetsEnabled: process.env.REACT_APP_ENABLE_MYASSETS === '1',\n  isFiatEnabled: process.env.REACT_APP_ENABLE_FIAT === '1',\n};\n\nexport default AppConfig;\n","import AppConfig from './AppConfig';\n\nconst CollectionConfig = {\n  contractName: 'DeixaXastroCollection',\n  contractAddress: AppConfig.nftContract,\n  openSeaURL: 'opensea.io/collection/deixa-xastro-origin',\n};\n\nexport default CollectionConfig;\n","export default __webpack_public_path__ + \"static/media/DeixaFlat.9b4ee11a.png\";","import * as React from 'react';\n\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport Divider from '@mui/material/Divider';\nimport Link from '@mui/material/Link';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Stack from '@mui/material/Stack';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport { MenuOutlined } from '@mui/icons-material';\nimport { IconButton, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport { useChain, useMoralis } from 'react-moralis';\nimport logo from '../../Assets/Logos/DeixaFlat.png';\nimport AppConfig from '../../Config/AppConfig';\n\nexport default function Header({ values, userWallet, signOut, setError, isTestNet, processing, setProcessing, nftContractOptions, viewMyAssets, buyEth }) {\n  const { isAuthenticated, Moralis, account } = useMoralis();\n  const { chain } = useChain();\n\n  function openInNewTab(url) {\n    window.open(url, '_blank', 'noopener,noreferrer');\n  }\n\n  async function setCollectionPaused(newState) {\n    try {\n      const tx = await Moralis.executeFunction({ ...nftContractOptions, params: { _state: newState }, functionName: 'setPaused' });\n      setProcessing(true);\n      await tx.wait();\n      setProcessing(false);\n      window.location.reload();\n    } catch (e) {\n      console.error(e);\n      setError(e);\n      setProcessing(false);\n    }\n  }\n\n  async function withdrawFunds() {\n    try {\n      const tx = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'withdraw' });\n      setProcessing(true);\n      await tx.wait();\n      setProcessing(false);\n      window.location.reload();\n    } catch (e) {\n      console.error(e);\n      setError(e);\n      setProcessing(false);\n    }\n  }\n\n  const [anchorEl, setAnchorEl] = useState();\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" elevation={2} sx={{ backgroundColor: 'black' }}>\n        <Toolbar>\n          <Link sx={{ cursor: 'pointer' }} onClick={() => openInNewTab('https://deixa.io')}>\n            <img src={logo} alt=\"logo\" style={{ width: '125px' }} />\n          </Link>\n          {account && isAuthenticated && (\n            <Stack spacing={1} direction=\"row\" alignItems={'center'} sx={{ marginLeft: 'auto' }}>\n              {AppConfig.isMyAssetsEnabled && <Chip variant=\"outlined\" color=\"primary\" label=\"My Assets\" sx={{ display: { xs: 'none', md: 'flex' } }} onClick={() => viewMyAssets(true)} />}\n              {AppConfig.isFiatEnabled && <Chip variant=\"outlined\" color=\"primary\" label=\"Buy ETH\" sx={{ display: { xs: 'none', md: 'flex' } }} onClick={() => buyEth(true)} />}\n              <Chip variant=\"outlined\" color=\"primary\" label={chain?.name} sx={{ display: { xs: 'none', md: 'flex' } }} />\n              <Tooltip title={account ? account : '...'}>\n                <Chip\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  label={`${account?.substring(0, 4).toUpperCase()}....${account?.slice(-4).toUpperCase()}`}\n                  sx={{ display: { xs: 'none', md: 'flex' } }}\n                  onClick={() => navigator.clipboard.writeText(account)}\n                />\n              </Tooltip>\n              <Chip variant=\"outlined\" color=\"primary\" label={userWallet?.formatted} sx={{ display: { xs: 'none', md: 'flex', motionDistance: 'flex' } }} />\n              {isAuthenticated && (\n                <Button variant=\"contained\" size=\"small\" onClick={() => signOut()} sx={{ display: { xs: 'none', md: 'flex' } }}>\n                  Disconnect\n                </Button>\n              )}\n\n              <IconButton\n                onClick={handleClick}\n                size=\"small\"\n                color=\"primary\"\n                sx={{ display: { xs: 'flex', md: 'none' } }}\n                aria-controls={open ? 'account-menu' : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? 'true' : undefined}\n              >\n                <MenuOutlined />\n              </IconButton>\n            </Stack>\n          )}\n        </Toolbar>\n      </AppBar>\n\n      {!processing && isAuthenticated && account && values.ownerAddress === values.userAddress && (\n        <AppBar position=\"fixed\" elevation={2} sx={{ top: 'auto', bottom: 0, backgroundColor: 'white' }}>\n          <Toolbar sx={{ backgroundColor: 'white' }}>\n            <Stack spacing={1} direction=\"row\">\n              <Button size=\"small\" variant=\"contained\" sx={{ color: 'white' }} onClick={() => setCollectionPaused(values.isMintingPaused ? false : true)}>\n                {values.isMintingPaused ? 'Resume Minting' : 'Pause Minting'}\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ color: 'white' }} onClick={() => withdrawFunds()}>\n                Withdraw Funds\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                sx={{ color: 'white' }}\n                onClick={() => openInNewTab(`https://${isTestNet() ? `${AppConfig.supportChainName.toLowerCase()}.` : ''}etherscan.io/address/${nftContractOptions.contractAddress}`)}\n              >\n                View Contract\n              </Button>\n              {/* <Button size='small' variant='contained' sx={{ color: 'white'}} onClick={() => setStakingPaused((values.isStakingPaused ? false : true))}>{values.isStakingPaused ? \"Resume Staking\" : \"Pause Staking\"}</Button> */}\n            </Stack>\n          </Toolbar>\n        </AppBar>\n      )}\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: 'visible',\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n            mt: 1.5,\n            '& .MuiAvatar-root': {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            '&:before': {\n              content: '\"\"',\n              display: 'block',\n              position: 'absolute',\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: 'background.paper',\n              transform: 'translateY(-50%) rotate(45deg)',\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      >\n        <MenuItem onClick={() => navigator.clipboard.writeText(account)}>\n          <Typography variant=\"subtitle1\" color=\"primary\">\n            Address: {`${account?.substring(0, 4).toUpperCase()}....${account?.slice(-4).toUpperCase()}`}\n          </Typography>\n        </MenuItem>\n        <MenuItem>{userWallet?.formatted}</MenuItem>\n        <MenuItem>{chain?.name}</MenuItem>\n        {AppConfig.isFiatEnabled && (\n          <MenuItem onClick={() => buyEth(true)}>\n            <Typography variant=\"subtitle1\" color=\"primary\">\n              Buy ETH\n            </Typography>\n          </MenuItem>\n        )}\n        {AppConfig.isMyAssetsEnabled && (\n          <MenuItem onClick={() => viewMyAssets(true)}>\n            <Typography variant=\"subtitle1\" color=\"primary\">\n              My Assets\n            </Typography>\n          </MenuItem>\n        )}\n        {isAuthenticated && <Divider />}\n        {isAuthenticated && (\n          <MenuItem onClick={() => signOut()}>\n            <Typography variant=\"subtitle1\" color=\"primary\">\n              Disconnect\n            </Typography>\n          </MenuItem>\n        )}\n      </Menu>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport { CardContent, Typography, Grid } from '@mui/material';\n\nexport default function CollectionInfo({ values }) {\n  return (\n    <CardContent mt={2}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\">Sale Type</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\" align=\"right\" color=\"primary\">\n            {`${values.saleStage} ${!values.isReleased ? '(Test)' : ''}`}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Typography variant=\"body2\">Sale Status</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\" align=\"right\" color=\"primary\">\n            {values.maxSupply === values.totalSupply\n              ? 'Sold Out'\n              : values.isMintingPaused\n              ? 'Closed'\n              : !(values.isFreelistMintEnabled || values.isGoldlistMintEnabled)\n              ? 'Open'\n              : (values.isFreelistMintEnabled && values.isUserInFreelist) || (values.isGoldlistMintEnabled && values.isUserInGoldlist)\n              ? 'Approved'\n              : 'Not Approved'}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Typography variant=\"body2\">Minting Status</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\" align=\"right\" color=\"primary\">\n            {`${values.totalSupply} of ${values.maxSupply}`}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Typography variant=\"body2\">Xastro NFTs Owned</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\" align=\"right\" color=\"primary\">\n            {values.nftWallet?.length ? '#' + values.nftWallet?.join(', #') : 'Your Wallet is Empty'}\n          </Typography>\n        </Grid>\n      </Grid>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { CardContent, Typography, Button, Grid, ButtonGroup, Box } from '@mui/material';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { useMoralis } from 'react-moralis';\n\nexport default function MintingControls({ values, mintAmount, setMintAmount, mintNFT }) {\n  const { Moralis } = useMoralis();\n  const incrementMintAmount = () => setMintAmount(Math.min(values.maxMintAmountPerTx, mintAmount + 1));\n  const decrementMintAmount = () => setMintAmount(Math.max(1, mintAmount - 1));\n  const mintCost = () => Moralis.Units.FromWei(values.tokenPrice, 18) * mintAmount;\n\n  return (\n    <CardContent sx={{ marginTop: '8px' }}>\n      <Grid container spacing={2}>\n        <Grid item md={4} xs={12}>\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n            <ButtonGroup variant=\"contained\" align=\"center\">\n              <Button variant=\"contained\" sx={{ color: 'white' }} fullWidth onClick={() => decrementMintAmount()}>\n                -\n              </Button>\n              <Button variant=\"contained\" sx={{ color: 'white' }} fullWidth>{`${mintAmount}`}</Button>\n              <Button variant=\"contained\" sx={{ color: 'white' }} fullWidth onClick={() => incrementMintAmount()}>\n                +\n              </Button>\n            </ButtonGroup>\n          </Box>\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Typography mt={0.5} variant=\"body2\" align=\"center\" fontSize={'1rem'} fontWeight={'bold'} color=\"primary\">\n            {`${mintCost().toFixed(3)} ETH`}\n          </Typography>\n          <Typography mt={-0.5} align=\"center\" fontSize={10}>\n            (plus gas)\n          </Typography>\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Button fullWidth variant=\"contained\" sx={{ color: 'white' }} onClick={() => mintNFT(mintAmount)} endIcon={<ArrowForwardIcon />}>\n            Mint\n          </Button>\n        </Grid>\n      </Grid>\n    </CardContent>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/background3.7767b560.png\";","export default class StringUtils {\n  static convertIpfsUriToIpfsUrl(uri) {\n    if (uri.startsWith('ipfs://ipfs/')) {\n      return `https://ipfs.io/ipfs/${uri.replaceAll('ipfs://ipfs/', '')}`;\n    } else if (uri.startsWith('ipfs://')) {\n      return `https://ipfs.io/ipfs/${uri.replaceAll('ipfs://', '')}`;\n    } else {\n      return uri;\n    }\n  }\n}\n","import { Button, Card, CardContent, CardMedia, DialogActions, Grid, Typography } from '@mui/material';\nimport * as React from 'react';\nimport Background from '../../Assets/background3.png';\nimport AppConfig from '../../Config/AppConfig';\nimport StringUtils from '../Utils/StringUtils';\n\nexport default function Nft({ nft, metadata }) {\n  const handleImageError = (e) => {\n    e.target.onerror = null;\n    e.target.src = Background;\n  };\n  return (\n    <Card elevation={8} sx={{ border: 3, borderColor: 'white', overflow: 'visible' }}>\n      <CardMedia\n        component=\"img\"\n        image={metadata ? StringUtils.convertIpfsUriToIpfsUrl(metadata.image) : Background}\n        sx={{ bgcolor: 'black', py: 2, borderRadius: '4px 4px 0 0' }}\n        onError={handleImageError}\n      />\n      <CardContent mt={2}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" color=\"primary\">\n              {metadata ? metadata.name : `${nft.name} #${nft.token_id}`}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body2\">{metadata ? metadata.description : nft.token_id}</Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <DialogActions style={{ justifyContent: 'center' }}>\n        <Button\n          onClick={() =>\n            window.open(\n              `https://${!AppConfig.isMainnet ? `${AppConfig.supportChainName.toLowerCase()}.` : ''}etherscan.io/token/${nft.token_address}?a=${nft.token_id}`,\n              '_blank',\n              'noopener,noreferrer',\n            )\n          }\n          color=\"primary\"\n        >\n          View on Etherscan\n        </Button>\n      </DialogActions>\n    </Card>\n  );\n}\n","import { Box, CircularProgress, Grid, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\nimport AppConfig from '../../Config/AppConfig';\nimport CollectionConfig from '../../Config/CollectionConfig';\nimport Nft from '../Nft';\n\nexport default function MyAssets() {\n  const { isAuthenticated, account, Moralis } = useMoralis();\n  const [nfts, setNfts] = useState();\n\n  useEffect(() => {\n    async function fetchNfts() {\n      try {\n        const response = await Moralis.Web3API.account.getNFTsForContract({\n          chain: AppConfig.supportChainId,\n          address: account,\n          token_address: CollectionConfig.contractAddress,\n        });\n        if (response) {\n          setNfts(response.result);\n        } else {\n          setNfts([]);\n        }\n      } catch (e) {\n        setNfts([]);\n      }\n    }\n    fetchNfts();\n  }, [isAuthenticated, account, Moralis.Web3API.account]);\n\n  return nfts ? (\n    nfts.length > 0 ? (\n      <Grid container spacing={4}>\n        {nfts.map((nft) => (\n          <Grid key={nft.token_id} item md={3} xs={12}>\n            <Nft nft={nft} metadata={nft.metadata && JSON.parse(nft.metadata)} />\n          </Grid>\n        ))}\n      </Grid>\n    ) : (\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mt={3}>\n        <Typography variant=\"body1\">Don't have any NFTs</Typography>\n      </Box>\n    )\n  ) : (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mt={3}>\n      <CircularProgress />\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\n\nexport default function Onramper() {\n  const { account, Moralis } = useMoralis();\n  const [fiatUrl, setFiatUrl] = useState();\n  useEffect(() => {\n    const getFiatPlugin = async () => {\n      if (!Moralis.Plugins.fiat) return;\n      let response = await Moralis.Plugins.fiat.buy(\n        {\n          coin: 'ETH',\n          receiver: account,\n        },\n        {\n          disableTriggers: true,\n        },\n      );\n      setFiatUrl(response.data);\n    };\n    getFiatPlugin();\n  }, [Moralis.Plugins.fiat, account]);\n\n  return (\n    <div>\n      {fiatUrl && (\n        <iframe\n          src={fiatUrl}\n          height=\"595px\"\n          width=\"440px\"\n          title=\"Buy ETH on Deixa\"\n          frameborder=\"0\"\n          allow=\"accelerometer;\n    autoplay; camera; gyroscope; payment\"\n        />\n      )}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Stack, CardContent, Box, LinearProgress, Typography } from '@mui/material';\n\nexport default function LoadingCollectionInfo() {\n  return (\n    <CardContent mt={2}>\n      <Stack spacing={2}>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Loading NFT Collection Information...\n        </Typography>\n        <Box sx={{ width: '100%' }}>\n          <LinearProgress />\n        </Box>\n      </Stack>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { Stack, CardContent, Typography } from '@mui/material';\n\nexport default function NoContractFound() {\n  return (\n    <CardContent mt={2}>\n      <Stack spacing={2}>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Something went wrong!\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          The NFT smart contract could not be found.\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Please make sure your wallet is connected to the Ethereum MainNet.\n        </Typography>\n      </Stack>\n    </CardContent>\n  );\n}\n","import { Button, CardActions, CardContent, Typography } from '@mui/material';\nimport * as React from 'react';\n\nexport default function NoWalletConnected({ signIn }) {\n  return (\n    <>\n      <CardContent mt={2}>\n        <Typography variant=\"body2\" align=\"center\">\n          Please connect your Ethereum wallet to continue.\n        </Typography>\n      </CardContent>\n\n      {typeof window.ethereum !== 'undefined' && (\n        <CardActions>\n          <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => signIn('metamask')}>\n            Metamask\n          </Button>\n        </CardActions>\n      )}\n\n      <CardActions>\n        <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => signIn('walletconnect')}>\n          WalletConnect\n        </Button>\n      </CardActions>\n\n      <CardActions>\n        <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => signIn('web3Auth')}>\n          Deixa Wallet\n        </Button>\n      </CardActions>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Stack, CardContent, Typography, Chip, Button, Box, LinearProgress } from '@mui/material';\nimport AppConfig from '../../Config/AppConfig';\n\nexport default function TransactionProcessing({ transaction, isTestNet }) {\n  const openInNewTab = (url) => window.open(url, '_blank', 'noopener,noreferrer');\n\n  return (\n    <CardContent mt={2}>\n      <Stack spacing={2}>\n        <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\" align=\"center\">\n          Processing Your Transaction\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Your transaction has been submitted to the Ethereum Network and is waiting to be confirmed!\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Your screen will automatically be refreshed when the transaction is completed. This may take up to 5 minutes to complete, so please be patient.\n        </Typography>\n        <Chip sx={{ fontSize: 9 }} label={transaction} />\n        <Button\n          variant=\"contained\"\n          sx={{ color: 'white' }}\n          fullWidth\n          size=\"small\"\n          onClick={() => openInNewTab(`https://${isTestNet() ? `${AppConfig.supportChainName.toLowerCase()}.` : ''}etherscan.io/tx/${transaction}`)}\n        >\n          View your transaction on EtherScan\n        </Button>\n        <Box mt={2} sx={{ width: '100%' }}>\n          <LinearProgress />\n        </Box>\n      </Stack>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { Card } from '@mui/material';\n\nexport default function MessageCard(props) {\n  return (\n    <Card\n      sx={{\n        border: 0.25,\n        borderColor: 'white',\n        position: 'relative',\n        display: 'flex',\n        padding: '1em',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: props.backgroundColor ? props.backgroundColor : 'black',\n        alignItems: 'center',\n      }}\n    >\n      {props.children}\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { Typography } from '@mui/material';\nimport MessageCard from './MessageCard';\n\nexport default function SaleClosed() {\n  return (\n    <MessageCard>\n      <Typography variant=\"body2\" color=\"primary\" align=\"center\">\n        This sale is closed. Please come back for our next sale!\n      </Typography>\n    </MessageCard>\n  );\n}\n","import * as React from 'react';\nimport { Typography, Button } from '@mui/material';\nimport MessageCard from './MessageCard';\n\nexport default function SoldOut({ isTestNet, collectionUrl }) {\n  const openInNewTab = (url) => window.open(url, '_blank', 'noopener,noreferrer');\n\n  return (\n    <MessageCard>\n      <Typography variant=\"body2\" color=\"primary\" align=\"center\">\n        Thank you for your support!\n      </Typography>\n      <Typography variant=\"body2\" color=\"primary\" align=\"center\">\n        Our current sale is sold out, but please come back for our next sale!\n      </Typography>\n      {/* LEGAL ADVISED NOT TO PROMOTE OPENSEA TRADING\n      <Button variant=\"contained\" fullWidth sx={{ mt: 2 }} onClick={() => openInNewTab(`https://${isTestNet() ? 'testnets.' : ''}${collectionUrl}`)}>\n        Buy Deixa Xastro Origin on OpenSea\n      </Button> \n      */}\n    </MessageCard>\n  );\n}\n","import { Button, CardActions, CardContent, Stack, Typography } from '@mui/material';\nimport * as React from 'react';\n\nexport default function SomethingWentWrong({ error, setError, onBuyEth }) {\n  function formatErrorMessage(error) {\n    if (error.message.includes('This is an invalid')) return 'Your wallet address is not on the approved list.';\n    if (error.message.includes('Your address has already claimed')) return `Your wallet address has already claimed an NFT for this stage of the sale.`;\n    if (error.message.includes('This purchase exceeds')) return 'Your purchase cannot be completed. It exceeds the maximum number of NFTs for this sale.';\n\n    switch (error.code) {\n      case 'INSUFFICIENT_FUNDS':\n        return 'Your wallet does not have enough ETH to complete this purchase.';\n      case 4001:\n        return 'This transaction has been canceled at your request.';\n      case 32603:\n        return error.message;\n      default:\n        return `An error has occurred while processing your transaction (${error.message})`;\n    }\n  }\n\n  return (\n    <>\n      <CardContent mt={2}>\n        <Stack spacing={2}>\n          <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\" align=\"center\">\n            Something Went Wrong!\n          </Typography>\n          <Typography variant=\"body2\" align=\"center\">\n            {formatErrorMessage(error)}\n          </Typography>\n        </Stack>\n      </CardContent>\n      <CardActions>\n        {error.code === 'INSUFFICIENT_FUNDS' ? (\n          <Button\n            fullWidth\n            sx={{ color: 'white' }}\n            variant=\"contained\"\n            onClick={async () => {\n              onBuyEth();\n              setError(null);\n            }}\n          >\n            Buy ETH\n          </Button>\n        ) : (\n          <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => setError(null)}>\n            OK\n          </Button>\n        )}\n      </CardActions>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Stack, CardContent, Typography, Button, Chip } from '@mui/material';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport AppConfig from '../../Config/AppConfig';\n\nexport default function TransactionComplete({ transaction, acknowledge, isTestNet }) {\n  const openInNewTab = (url) => window.open(url, '_blank', 'noopener,noreferrer');\n\n  return (\n    <CardContent mt={2} sx={{ overflow: 'visible' }}>\n      <ConfettiExplosion />\n      <Stack spacing={2}>\n        <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\" align=\"center\">\n          Congratulations!\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          You transaction has been confirmed!\n        </Typography>\n        <Chip variant=\"outlined\" sx={{ fontSize: 9 }} label={transaction} />\n        <Button variant=\"outlined\" fullWidth size=\"small\" onClick={() => openInNewTab(`https://${isTestNet() ? `${AppConfig.supportChainName.toLowerCase()}.` : ''}etherscan.io/tx/${transaction}`)}>\n          View your transaction on EtherScan\n        </Button>\n        <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => acknowledge()}>\n          OK\n        </Button>\n      </Stack>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { Typography } from '@mui/material';\nimport MessageCard from './MessageCard';\n\nexport default function WrongNetwork({ network }) {\n  return (\n    <MessageCard>\n      <Typography variant=\"body2\" color=\"orange\" align=\"center\">\n        {`You are not connected to the ${network}`}\n      </Typography>\n      <Typography variant=\"body2\" color=\"orange\" align=\"center\">\n        Please connect to continue...\n      </Typography>\n    </MessageCard>\n  );\n}\n","// REACT LIBRARIES\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n// UI LIBRARIES\nimport { Box, Button, Card, CardMedia, Container, Dialog, DialogActions, DialogContent, DialogTitle, Divider, IconButton, Link, Stack, Typography } from '@mui/material';\n\n// WEB3 LIBRARIES\nimport { BigNumber } from 'ethers';\nimport { useChain, useMoralis, useNativeBalance } from 'react-moralis';\n\n// DAPP ASSETS\nimport background from '../../Assets/background4.png';\nimport XastroLogo from '../../Assets/Logos/Xastro.png';\nimport CollectionConfig from '../../Config/CollectionConfig';\nimport Freelist from '../Utils/Freelist';\nimport Goldlist from '../Utils/Goldlist';\nimport Header from './../Header/Header';\n\n// DAPP COMPONENTS\nimport { CloseOutlined } from '@mui/icons-material';\nimport logo from '../../Assets/Logos/DeixaFlat.png';\nimport AppConfig from '../../Config/AppConfig';\nimport CollectionInfo from '../CollectionInfo/CollectionInfo';\nimport MintingControls from '../MintingControls/MintingControls';\nimport MyAssets from '../MyAssets';\nimport Onramper from '../Onramper';\nimport LoadingCollectionInfo from '../Status/LoadingCollectionInfo';\nimport NoContractFond from '../Status/NoContractFound';\nimport NoWalletConnected from '../Status/NoWalletConnected';\nimport ProcessingTransaction from '../Status/ProcessingTransaction';\nimport SaleClosed from '../Status/SaleClosed';\nimport SoldOut from '../Status/SoldOut';\nimport SomethingWentWrong from '../Status/SomethingWentWrong';\nimport TransactionComplete from '../Status/TransactionComplete';\nimport WrongNetwork from '../Status/WrongNetwork';\n\nconst nftContractAbi = require('../../Config/DeixaXastroCollection.json').abi;\n\nconst defaultState = {\n  userAddress: null,\n  userBalance: 0,\n  ownerAddress: null,\n  network: null,\n  networkConfig: null,\n  totalSupply: 0,\n  maxSupply: 0,\n  maxMintAmountPerTx: 0,\n  tokenPrice: BigNumber.from(0),\n  isMintingPaused: null,\n  isFreelistMintEnabled: false,\n  isGoldlistMintEnabled: false,\n  isPreSaleMintEnabled: false,\n  isUserInFreelist: false,\n  isUserInGoldlist: false,\n  nftWallet: [],\n  isReleased: false,\n  saleStage: null,\n  merkleProofManualAddress: '',\n  merkleProofManualAddressFeedbackMessage: null,\n};\n\nfunction App() {\n  const [searchParam, setSearchParam] = useSearchParams();\n  const [promotionCode, setPromotionCode] = useState(searchParam.get('promo'));\n\n  const [error, setError] = useState('');\n  const [mintAmount, setMintAmount] = useState(1);\n  const [values, setValues] = useState(defaultState);\n  const [processing, setProcessing] = useState(false);\n  const [transaction, setTransaction] = useState(null);\n  const [contractFound, setContractFound] = useState(false);\n  const [transactionCompleted, setTransactionCompleted] = useState(false);\n  const [shouldShowMyAssets, setShowMyAssets] = useState(false);\n  const [shouldShowBuyEth, setShowBuyEth] = useState(false);\n\n  const { chainId } = useChain();\n  const { data: userWallet } = useNativeBalance();\n  const { authenticate, logout, isWeb3Enabled, enableWeb3, isAuthenticated, isWeb3EnableLoading, account, chain, Moralis } = useMoralis();\n\n  let nftContractOptions = {\n    contractAddress: CollectionConfig.contractAddress,\n    abi: nftContractAbi,\n    functionName: null,\n    msgValue: 0,\n  };\n\n  // DEBUG WATCHERS\n  useEffect(() => {\n    console.log('Web3Enabled', isWeb3Enabled);\n  }, [isWeb3Enabled]);\n\n  useEffect(() => {\n    console.log('Authenticated', isAuthenticated);\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    console.log('Promo Code:', promotionCode);\n  }, [promotionCode]);\n\n  useEffect(() => {\n    console.log('Values:', values);\n  }, [values]);\n\n  function getProviderParam(providerId) {\n    switch (providerId) {\n      case 'walletconnect':\n        //return { provider: providerId, chainId: parseInt(AppConfig.supportChainId, 16) };\n        return { provider: providerId };\n      case 'web3Auth':\n        return { provider: providerId, clientId: AppConfig.web3AuthClientId, chainId: AppConfig.supportChainId, appLogo: logo };\n      case 'metamask':\n      default:\n        return { provider: providerId };\n    }\n  }\n\n  // AUTHENTICATION\n  async function signIn(providerId) {\n    await authenticate(getProviderParam(providerId));\n    localStorage.setItem('local_provider', providerId);\n  }\n\n  async function signOut() {\n    await logout();\n    localStorage.removeItem('local_provider');\n    setShowMyAssets(false);\n    setError('');\n    setValues(() => defaultState);\n  }\n\n  // INITIALIZATION\n  useEffect(() => {\n    async function initialize() {\n      if (isAuthenticated && !isWeb3Enabled && !isWeb3EnableLoading) {\n        await enableWeb3(getProviderParam(localStorage.getItem('local_provider')));\n      }\n      if (isAuthenticated && isWeb3Enabled) {\n        await initWallet();\n      }\n    }\n    initialize();\n\n    const unsubAccountChanged = Moralis.onAccountChanged(function (account) {\n      console.log('Detected an Account Change:', account);\n      window.location.reload();\n    });\n\n    const unsubChainChanged = Moralis.onChainChanged(function (chain) {\n      console.log('Detected a Chain Change:', chain);\n      window.location.reload();\n    });\n\n    return () => {\n      unsubAccountChanged();\n      unsubChainChanged();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAuthenticated, isWeb3Enabled, account, chain]);\n\n  async function initWallet() {\n    console.log('Initializing Wallet...');\n    setProcessing(true);\n    setValues(() => defaultState);\n\n    if (!account) {\n      console.log('initWallet: account is null. exiting...');\n      return;\n    }\n\n    let cost = 0;\n    let owner = null;\n    let maxSupply = 0;\n    let totalSupply = 0;\n    let nftWallet = null;\n    let isReleased = false;\n    let maxMintAmountPerTx = 0;\n    let isMintingPaused = true;\n    let isFreelistMintEnabled = false;\n    let isGoldlistMintEnabled = false;\n    let isPreSaleMintEnabled = false;\n\n    // COLLECTION PROPERTIES\n    try {\n      owner = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'owner' });\n      maxSupply = (await Moralis.executeFunction({ ...nftContractOptions, functionName: 'maxSupply' }))?.toNumber();\n      totalSupply = (await Moralis.executeFunction({ ...nftContractOptions, functionName: 'totalSupply' }))?.toNumber();\n      maxMintAmountPerTx = (await Moralis.executeFunction({ ...nftContractOptions, functionName: 'maxMintAmountPerTx' }))?.toNumber();\n      cost = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'cost' });\n      isMintingPaused = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'paused' });\n      isFreelistMintEnabled = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'freeListMintEnabled' });\n      isGoldlistMintEnabled = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'goldListMintEnabled' });\n      isPreSaleMintEnabled = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'preSaleMintEnabled' });\n      isReleased = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'released' });\n      nftWallet = await Moralis.executeFunction({ ...nftContractOptions, params: { _owner: account }, functionName: 'walletOfOwner' });\n    } catch (e) {\n      console.error(e);\n      setContractFound(false);\n      setProcessing(false);\n      return;\n    }\n\n    setValues((prevValues) => ({\n      ...prevValues,\n      userAddress: account.toUpperCase(),\n      ownerAddress: owner.toUpperCase(),\n      maxSupply: maxSupply,\n      totalSupply: totalSupply,\n      maxMintAmountPerTx: maxMintAmountPerTx,\n      tokenPrice: cost,\n      isMintingPaused: isMintingPaused,\n      saleStage: isFreelistMintEnabled ? 'Free List Only' : isGoldlistMintEnabled ? 'Founder List Only' : isPreSaleMintEnabled ? 'First Release' : 'Second Release',\n      isFreelistMintEnabled: isFreelistMintEnabled,\n      isGoldlistMintEnabled: isGoldlistMintEnabled,\n      isPreSaleMintEnabled: isPreSaleMintEnabled,\n      isUserInFreelist: Freelist.contains(account ?? ''),\n      isUserInGoldlist: Goldlist.contains(account ?? ''),\n      isReleased: isReleased,\n      nftWallet: nftWallet,\n    }));\n\n    setContractFound(true);\n    setProcessing(false);\n  }\n\n  // COLLECTION FUNCTIONS\n\n  async function mintNFT(amount) {\n    let tx;\n    const promoCode = promotionCode ? promotionCode : 'deixa';\n\n    try {\n      values.isFreelistMintEnabled\n        ? (tx = await Moralis.executeFunction({\n            ...nftContractOptions,\n            params: { _mintAmount: amount, _merkleProof: Freelist.getProofForAddress(account), _promotionCode: 'deixa' },\n            msgValue: values.tokenPrice.mul(amount),\n            functionName: 'freeListMint',\n          }))\n        : values.isGoldlistMintEnabled\n        ? (tx = await Moralis.executeFunction({\n            ...nftContractOptions,\n            params: { _mintAmount: amount, _merkleProof: Goldlist.getProofForAddress(account), _promotionCode: promoCode },\n            msgValue: values.tokenPrice.mul(amount),\n            functionName: 'goldListMint',\n          }))\n        : (tx = await Moralis.executeFunction({\n            ...nftContractOptions,\n            params: { _mintAmount: amount, _promotionCode: promoCode },\n            msgValue: values.tokenPrice.mul(amount),\n            functionName: 'mint',\n          }));\n\n      setTransaction(tx.hash);\n      setTransactionCompleted(false);\n      setProcessing(true);\n      await tx.wait();\n      setProcessing(false);\n      setTransactionCompleted(true);\n    } catch (e) {\n      console.error(e);\n      setError(e);\n      setProcessing(false);\n    }\n  }\n\n  async function acknowledgeTransaction() {\n    setTransaction(null);\n    setTransactionCompleted(false);\n    await initWallet();\n  }\n\n  function viewMyAssets(shouldShow) {\n    setShowMyAssets(shouldShow);\n  }\n\n  function onShowBuyEth(shouldShow) {\n    setShowBuyEth(shouldShow);\n  }\n\n  function openInNewTab(url) {\n    window.open(url, '_blank', 'noopener,noreferrer');\n  }\n\n  const isMainNet = () => AppConfig.isMainnet;\n  const isTestNet = () => !AppConfig.isMainnet;\n  const isWalletConnected = () => account !== null && isAuthenticated;\n  const isSoldOut = () => values.maxSupply !== 0 && values.totalSupply >= values.maxSupply;\n  const isPurchaseEnabled = () => isWalletConnected() && !isSoldOut() && !values.isMintingPaused && contractFound && ((values.isReleased && isMainNet()) || (!values.isReleased && !isMainNet()));\n\n  const showNoWalletConnected = () => !processing && !isWalletConnected();\n  const showContractNotFound = () => !processing && isWalletConnected() && !contractFound;\n  const showSomethingWentWrong = () => !processing && error;\n  const showLoadingCollectionInfo = () => processing && !transaction;\n  const showProcessingTransaction = () => processing && transaction && !transactionCompleted;\n  const showTransactionComplete = () => !processing && transactionCompleted;\n  const showCollectionInfo = () => !processing && isWalletConnected() && contractFound && !error && !transactionCompleted;\n  const showMintingControls = () => !processing && isPurchaseEnabled() && !error && !transactionCompleted;\n  const showSaleClosed = () => !processing && values.isMintingPaused && contractFound;\n  const showSoldOut = () => !processing && isSoldOut() && contractFound;\n  const showNotOnMainNet = () => !processing && values.isReleased && !isMainNet();\n  const showNotOnTestNet = () => !processing && !values.isReleased && isMainNet();\n\n  return (\n    <Container disableGutters maxWidth=\"false\">\n      <Header\n        values={values}\n        signOut={signOut}\n        userWallet={userWallet}\n        isTestNet={isTestNet}\n        setError={setError}\n        processing={processing}\n        setProcessing={setProcessing}\n        nftContractOptions={nftContractOptions}\n        viewMyAssets={viewMyAssets}\n        buyEth={onShowBuyEth}\n      />\n      <div\n        style={{\n          position: 'relative',\n          height: '100vh',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundImage: `url(${background})`,\n        }}\n      >\n        <Container fixed={true} maxWidth=\"xs\">\n          <Stack spacing={2} sx={{ overflow: 'visible' }}>\n            {/* MAIN COLLECTION UX */}\n\n            <Card raised={true} elevation={20} sx={{ border: 3, borderColor: 'white', overflow: 'visible' }}>\n              <Link href={`https://${isTestNet() ? `${AppConfig.supportChainName.toLowerCase()}.` : ''}etherscan.io/address/${nftContractOptions.contractAddress}`} target=\"_blank\">\n                <CardMedia component=\"img\" image={XastroLogo} alt=\"DEIXA Xastro\" sx={{ bgcolor: 'black', py: 2, borderRadius: '4px 4px 0 0' }} />\n              </Link>\n\n              {showNoWalletConnected() && <NoWalletConnected signIn={signIn} />}\n\n              {showContractNotFound() && <NoContractFond />}\n\n              {showSomethingWentWrong() && <SomethingWentWrong error={error} setError={setError} onBuyEth={() => onShowBuyEth(true)} />}\n\n              {showLoadingCollectionInfo() && <LoadingCollectionInfo />}\n\n              {showProcessingTransaction() && <ProcessingTransaction transaction={transaction} isTestNet={isTestNet} />}\n\n              {showTransactionComplete() && <TransactionComplete transaction={transaction} acknowledge={acknowledgeTransaction} isTestNet={isTestNet} />}\n\n              {showCollectionInfo() && <CollectionInfo values={values} />}\n\n              <Divider />\n\n              {showMintingControls() && <MintingControls values={values} mintAmount={mintAmount} setMintAmount={setMintAmount} mintNFT={mintNFT} />}\n            </Card>\n\n            {/* ADDITIONAL INFO CARDS FOR VARIOUS CONDITIONS */}\n\n            {showSaleClosed() && <SaleClosed />}\n\n            {showSoldOut() && <SoldOut isTestNet={isTestNet} collectionUrl={CollectionConfig.openSeaURL} />}\n\n            {showNotOnMainNet() && <WrongNetwork network={'Ethereum TestNet'} />}\n\n            {showNotOnTestNet() && <WrongNetwork network={'Ethereum MainNet'} />}\n          </Stack>\n        </Container>\n\n        <Dialog\n          open={shouldShowMyAssets}\n          onClose={() => viewMyAssets(false)}\n          fullWidth\n          maxWidth=\"lg\"\n          PaperProps={{\n            style: {\n              minHeight: '50%',\n            },\n          }}\n        >\n          <DialogTitle>\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"h6\">My Assets</Typography>\n              <IconButton onClick={() => viewMyAssets(false)}>\n                <CloseOutlined />\n              </IconButton>\n            </Box>\n          </DialogTitle>\n          <DialogContent>\n            <MyAssets />\n          </DialogContent>\n          {values.nftWallet && values.nftWallet.length > 0 && (\n            <DialogActions style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\n              <Button onClick={() => window.open(`https://${isTestNet ? 'testnets.' : ''}${CollectionConfig.openSeaURL}`, '_blank', 'noopener,noreferrer')} color=\"primary\">\n                View on OpenSea\n              </Button>\n              <Typography align=\"right\" variant=\"subtitle2\">\n                Connect to OpenSea Using your Deixa Wallet by Selecting Torus Wallet\n              </Typography>\n            </DialogActions>\n          )}\n        </Dialog>\n\n        <Dialog\n          open={shouldShowBuyEth}\n          onClose={() => onShowBuyEth(false)}\n          PaperProps={{\n            style: {\n              minHeight: '82%',\n            },\n          }}\n        >\n          <DialogTitle>\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"h6\"></Typography>\n              <IconButton onClick={() => onShowBuyEth(false)}>\n                <CloseOutlined />\n              </IconButton>\n            </Box>\n          </DialogTitle>\n          <DialogContent>\n            <Onramper />\n          </DialogContent>\n        </Dialog>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport { createTheme } from '@mui/material/styles';\nimport { MoralisProvider } from 'react-moralis';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './Components/App/App';\nimport './index.css';\nimport AppConfig from './Config/AppConfig';\n\nconst appTheme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#587efc',\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={appTheme}>\n      <MoralisProvider appId={AppConfig.moralisAppId} serverUrl={AppConfig.moralisServerUrl}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </MoralisProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import freelistAddresses from '../../Config/freelist.json';\nimport { MerkleTree } from 'merkletreejs';\nimport keccak256 from 'keccak256';\n\nexport default new (class Freelist {\n  merkleTree;\n\n  getMerkleTree() {\n    if (this.merkleTree === undefined) {\n      const leafNodes = freelistAddresses.map((addr) => keccak256(addr));\n      this.merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true });\n    }\n    return this.merkleTree;\n  }\n\n  getProofForAddress(address) {\n    return this.getMerkleTree().getHexProof(keccak256(address));\n  }\n\n  getRawProofForAddress(address) {\n    return this.getProofForAddress(address).toString().replaceAll(\"'\", '').replaceAll(' ', '');\n  }\n\n  contains(address) {\n    return this.getMerkleTree().getLeafIndex(Buffer.from(keccak256(address))) >= 0;\n  }\n})();\n","import goldlistAddresses from '../../Config/goldlist.json';\nimport { MerkleTree } from 'merkletreejs';\nimport keccak256 from 'keccak256';\n\nexport default new (class Goldlist {\n  merkleTree;\n\n  getMerkleTree() {\n    if (this.merkleTree === undefined) {\n      const leafNodes = goldlistAddresses.map((addr) => keccak256(addr));\n      this.merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true });\n    }\n    return this.merkleTree;\n  }\n\n  getProofForAddress(address) {\n    return this.getMerkleTree().getHexProof(keccak256(address));\n  }\n\n  getRawProofForAddress(address) {\n    return this.getProofForAddress(address).toString().replaceAll(\"'\", '').replaceAll(' ', '');\n  }\n\n  contains(address) {\n    return this.getMerkleTree().getLeafIndex(Buffer.from(keccak256(address))) >= 0;\n  }\n})();\n"],"sourceRoot":""}