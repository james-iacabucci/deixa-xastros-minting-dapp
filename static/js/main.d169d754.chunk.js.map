{"version":3,"sources":["assets/Logos/DeixaFlat.png","Components/Header/Header.js","assets/background4.png","assets/Logos/Xastro.png","Config/CollectionConfig.js","Components/Status/MessageCard.js","Components/Status/SoldOut.js","Components/Status/SaleClosed.js","Components/Status/WrongNetwork.js","Components/Status/NoContractFound.js","Components/Status/NoWalletConnected.js","Components/Status/SomethingWentWrong.js","Components/CollectionInfo/CollectionInfo.js","Components/Status/TransactionComplete.js","Components/MintingControls/MintingControls.js","Components/Status/LoadingCollectionInfo.js","Components/Status/ProcessingTransaction.js","Components/App/App.js","index.js","Components/Utils/Freelist.js","Components/Utils/Goldlist.js"],"names":["Header","values","userWallet","signOut","setError","isTestNet","processing","setProcessing","nftContractOptions","stakingContractOptions","useMoralis","isAuthenticated","Moralis","account","chain","useChain","openInNewTab","url","window","open","newState","executeFunction","params","_state","functionName","tx","wait","location","reload","console","error","AppBar","position","elevation","sx","backgroundColor","Toolbar","Link","cursor","onClick","src","logo","alt","style","width","Stack","spacing","direction","alignItems","marginLeft","Chip","variant","color","label","name","display","xs","md","Tooltip","title","substring","toUpperCase","slice","sm","formatted","Button","size","ownerAddress","userAddress","top","bottom","setCollectionPaused","isMintingPaused","withdrawFunds","contractAddress","CollectionConfig","contractName","openSeaURL","MessageCard","props","Card","padding","flexDirection","justifyContent","children","SoldOut","collectionUrl","Typography","align","fullWidth","mt","SaleClosed","WrongNetwork","network","NoContractFound","CardContent","textAlign","NoWalletConnected","signIn","CardActions","SomethingWentWrong","fontWeight","message","includes","code","formatErrorMessage","CollectionInfo","Grid","container","item","saleStage","isReleased","maxSupply","totalSupply","isFreelistMintEnabled","isGoldlistMintEnabled","isUserInFreelist","isUserInGoldlist","nftWallet","length","join","TransactionComplete","transaction","acknowledge","overflow","fontSize","MintingControls","mintAmount","setMintAmount","mintNFT","marginTop","ButtonGroup","Math","max","min","maxMintAmountPerTx","Units","FromWei","tokenPrice","toFixed","endIcon","LoadingCollectionInfo","Box","LinearProgress","TransactionProcessing","nftContractAbi","require","abi","defaultState","userBalance","networkConfig","BigNumber","from","isPreSaleMintEnabled","merkleProofManualAddress","merkleProofManualAddressFeedbackMessage","App","useSearchParams","searchParam","useState","get","promotionCode","setValues","setTransaction","contractFound","setContractFound","transactionCompleted","setTransactionCompleted","chainId","useNativeBalance","data","authenticate","logout","isWeb3Enabled","enableWeb3","isWeb3EnableLoading","msgValue","getProviderParam","providerId","provider","localStorage","setItem","removeItem","initWallet","log","cost","owner","toNumber","_owner","prevValues","Freelist","contains","Goldlist","amount","promoCode","_mintAmount","_merkleProof","getProofForAddress","_promotionCode","mul","hash","useEffect","getItem","initialize","unsubAccountChanged","onAccountChanged","unsubChainChanged","onChainChanged","isMainNet","isWalletConnected","isSoldOut","toString","Container","disableGutters","maxWidth","height","backgroundImage","background","fixed","raised","border","borderColor","CardMedia","component","image","XastroLogo","bgcolor","py","borderRadius","Divider","appTheme","createTheme","palette","mode","primary","main","ReactDOM","render","StrictMode","theme","appId","process","serverUrl","document","getElementById","undefined","this","merkleTree","leafNodes","freelistAddresses","map","addr","keccak256","MerkleTree","sortPairs","address","getMerkleTree","getHexProof","replaceAll","getLeafIndex","Buffer","goldlistAddresses"],"mappings":"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","file":"static/js/main.d169d754.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DeixaFlat.9b4ee11a.png\";","import * as React from 'react';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Chip from '@mui/material/Chip';\nimport Link from '@mui/material/Link';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport { useMoralis, useChain } from 'react-moralis';\nimport logo from '../../assets/Logos/DeixaFlat.png';\n\nexport default function Header({ values, userWallet, signOut, setError, isTestNet, processing, setProcessing, nftContractOptions, stakingContractOptions }) {\n  const { isAuthenticated, Moralis, account } = useMoralis();\n  const { chain } = useChain();\n\n  function openInNewTab(url) {\n    window.open(url, '_blank', 'noopener,noreferrer');\n  }\n\n  async function setCollectionPaused(newState) {\n    try {\n      const tx = await Moralis.executeFunction({ ...nftContractOptions, params: { _state: newState }, functionName: 'setPaused' });\n      setProcessing(true);\n      await tx.wait();\n      setProcessing(false);\n      window.location.reload();\n    } catch (e) {\n      console.error(e);\n      setError(e);\n      setProcessing(false);\n    }\n  }\n\n  async function withdrawFunds() {\n    try {\n      const tx = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'withdraw' });\n      setProcessing(true);\n      await tx.wait();\n      setProcessing(false);\n      window.location.reload();\n    } catch (e) {\n      console.error(e);\n      setError(e);\n      setProcessing(false);\n    }\n  }\n\n  return (\n    <>\n      <AppBar position=\"fixed\" elevation={2} sx={{ backgroundColor: 'black' }}>\n        <Toolbar>\n          <Link sx={{ cursor: 'pointer' }} onClick={() => openInNewTab('https://deixa.io')}>\n            <img src={logo} alt=\"logo\" style={{ width: '125px' }} />\n          </Link>\n          {account && isAuthenticated && (\n            <Stack spacing={1} direction=\"row\" alignItems={'center'} sx={{ marginLeft: 'auto' }}>\n              <Chip variant=\"outlined\" color=\"primary\" label={chain?.name} sx={{ display: { xs: 'none', md: 'flex' } }} />\n              <Tooltip title={account ? account : '...'}>\n                <Chip variant=\"outlined\" color=\"primary\" label={`${account?.substring(0, 4).toUpperCase()}....${account?.slice(-4).toUpperCase()}`} sx={{ display: { xs: 'none', sm: 'flex' } }} />\n              </Tooltip>\n              <Chip variant=\"outlined\" color=\"primary\" label={userWallet?.formatted} sx={{ display: { xs: 'none', sm: 'flex' } }} />\n              {isAuthenticated && (\n                <Button variant=\"contained\" size=\"small\" onClick={() => signOut()}>\n                  Disconnect\n                </Button>\n              )}\n            </Stack>\n          )}\n        </Toolbar>\n      </AppBar>\n\n      {!processing && isAuthenticated && account && values.ownerAddress === values.userAddress && (\n        <AppBar position=\"fixed\" elevation={2} sx={{ top: 'auto', bottom: 0, backgroundColor: 'white' }}>\n          <Toolbar sx={{ backgroundColor: 'white' }}>\n            <Stack spacing={1} direction=\"row\">\n              <Button size=\"small\" variant=\"contained\" sx={{ color: 'white' }} onClick={() => setCollectionPaused(values.isMintingPaused ? false : true)}>\n                {values.isMintingPaused ? 'Resume Minting' : 'Pause Minting'}\n              </Button>\n              <Button size=\"small\" variant=\"contained\" sx={{ color: 'white' }} onClick={() => withdrawFunds()}>\n                Withdraw Funds\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                sx={{ color: 'white' }}\n                onClick={() => openInNewTab(`https://${isTestNet() ? 'rinkeby.' : ''}etherscan.io/address/${nftContractOptions.contractAddress}`)}\n              >\n                View Contract\n              </Button>\n              {/* <Button size='small' variant='contained' sx={{ color: 'white'}} onClick={() => setStakingPaused((values.isStakingPaused ? false : true))}>{values.isStakingPaused ? \"Resume Staking\" : \"Pause Staking\"}</Button> */}\n            </Stack>\n          </Toolbar>\n        </AppBar>\n      )}\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/background4.75e56f56.png\";","export default __webpack_public_path__ + \"static/media/Xastro.0b4efdea.png\";","const CollectionConfig = {\n  contractName: 'DeixaXastroCollection',\n  contractAddress: '0xA83Debc9bdf026388d08783E2b51Ec5707db21c5',\n  openSeaURL: 'opensea.io/collection/deixa-xastro-origin',\n};\n\nexport default CollectionConfig;\n","import * as React from 'react';\nimport { Card } from '@mui/material';\n\nexport default function MessageCard(props) {\n  return (\n    <Card\n      sx={{\n        position: 'relative',\n        display: 'flex',\n        padding: '1em',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: props.backgroundColor ? props.backgroundColor : 'black',\n        alignItems: 'center',\n      }}\n    >\n      {props.children}\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { Typography, Button } from '@mui/material';\nimport MessageCard from './MessageCard';\n\nexport default function SoldOut({ isTestNet, collectionUrl }) {\n  const openInNewTab = (url) => window.open(url, '_blank', 'noopener,noreferrer');\n\n  return (\n    <MessageCard>\n      <Typography variant=\"body2\" color=\"primary\" align=\"center\">\n        Thank you for your support!\n      </Typography>\n      <Typography variant=\"body2\" color=\"primary\" align=\"center\">\n        Our current sale is sold out, but please come back for our next sale!\n      </Typography>\n      <Button variant=\"contained\" fullWidth sx={{ mt: 2 }} onClick={() => openInNewTab(`https://${isTestNet() ? 'testnets.' : ''}${collectionUrl}`)}>\n        Buy Deixa Xastro Origin on OpenSea\n      </Button>\n    </MessageCard>\n  );\n}\n","import * as React from 'react';\nimport { Typography } from '@mui/material';\nimport MessageCard from './MessageCard';\n\nexport default function SaleClosed() {\n  return (\n    <MessageCard>\n      <Typography variant=\"body2\" color=\"primary\" align=\"center\">\n        This sale is closed. Please come back for our next sale!\n      </Typography>\n    </MessageCard>\n  );\n}\n","import * as React from 'react';\nimport { Typography } from '@mui/material';\nimport MessageCard from './MessageCard';\n\nexport default function WrongNetwork({ network }) {\n  return (\n    <MessageCard>\n      <Typography variant=\"body2\" color=\"orange\" align=\"center\">\n        {`You are not connected to the ${network}`}\n      </Typography>\n      <Typography variant=\"body2\" color=\"orange\" align=\"center\">\n        Please connect to continue...\n      </Typography>\n    </MessageCard>\n  );\n}\n","import * as React from 'react';\nimport { Stack, CardContent, Typography } from '@mui/material';\n\nexport default function NoContractFound() {\n  return (\n    <CardContent mt={2}>\n      <Stack spacing={2}>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Something went wrong!\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          The NFT smart contract could not be found.\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Please make sure your wallet is connected to the Ethereum MainNet.\n        </Typography>\n      </Stack>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { CardActions, CardContent, Typography, Button } from '@mui/material';\n\nexport default function NoWalletConnected({ signIn }) {\n  return (\n    <>\n      <CardContent mt={2}>\n        <Typography variant=\"body2\" align=\"center\">\n          Please connect your Ethereum wallet to continue.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => signIn('metamask')}>\n          Metamask\n        </Button>\n        <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => signIn('walletconnect')}>\n          WalletConnect\n        </Button>\n      </CardActions>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Stack, Button, CardActions, CardContent, Typography } from '@mui/material';\n\nexport default function SomethingWentWrong({ error, setError }) {\n  function formatErrorMessage(error) {\n    if (error.message.includes('This is an invalid')) return 'Your wallet address is not on the approved list.';\n    if (error.message.includes('Your address has already claimed')) return `Your wallet address has already claimed an NFT for this stage of the sale.`;\n    if (error.message.includes('This purchase exceeds')) return 'Your purchase cannot be completed. It exceeds the maximum number of NFTs for this sale.';\n\n    switch (error.code) {\n      case 'INSUFFICIENT_FUNDS':\n        return 'Your wallet does not have enough ETH to complete this purchase.';\n      case 4001:\n        return 'This transaction has been canceled at your request.';\n      case 32603:\n        return error.message;\n      default:\n        return `An error has occurred while processing your transaction (${error.message})`;\n    }\n  }\n\n  return (\n    <>\n      <CardContent mt={2}>\n        <Stack spacing={2}>\n          <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\" align=\"center\">\n            Something Went Wrong!\n          </Typography>\n          <Typography variant=\"body2\" align=\"center\">\n            {formatErrorMessage(error)}\n          </Typography>\n        </Stack>\n      </CardContent>\n      <CardActions>\n        <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => setError(null)}>\n          OK\n        </Button>\n      </CardActions>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { CardContent, Typography, Grid } from '@mui/material';\n\nexport default function CollectionInfo({ values }) {\n  return (\n    <CardContent mt={2}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\">Sale Type</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\" align=\"right\" color=\"primary\">\n            {`${values.saleStage} ${!values.isReleased ? '(Test)' : ''}`}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Typography variant=\"body2\">Sale Status</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\" align=\"right\" color=\"primary\">\n            {values.maxSupply === values.totalSupply\n              ? 'Sold Out'\n              : values.isMintingPaused\n              ? 'Closed'\n              : !(values.isFreelistMintEnabled || values.isGoldlistMintEnabled)\n              ? 'Open'\n              : (values.isFreelistMintEnabled && values.isUserInFreelist) || (values.isGoldlistMintEnabled && values.isUserInGoldlist)\n              ? 'Approved'\n              : 'Not Approved'}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Typography variant=\"body2\">Minting Status</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\" align=\"right\" color=\"primary\">\n            {`${values.totalSupply} of ${values.maxSupply}`}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Typography variant=\"body2\">Xastro NFTs Owned</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body2\" align=\"right\" color=\"primary\">\n            {values.nftWallet?.length ? '#' + values.nftWallet?.join(', #') : 'Your Wallet is Empty'}\n          </Typography>\n        </Grid>\n      </Grid>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { Stack, CardContent, Typography, Button, Chip } from '@mui/material';\nimport ConfettiExplosion from 'react-confetti-explosion';\n\nexport default function TransactionComplete({ transaction, acknowledge, isTestNet }) {\n  const openInNewTab = (url) => window.open(url, '_blank', 'noopener,noreferrer');\n\n  return (\n    <CardContent mt={2} sx={{ overflow: 'visible' }}>\n      <ConfettiExplosion />\n      <Stack spacing={2}>\n        <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\" align=\"center\">\n          Congratulations!\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          You transaction has been confirmed!\n        </Typography>\n        <Chip variant=\"outlined\" sx={{ fontSize: 9 }} label={transaction} />\n        <Button variant=\"outlined\" fullWidth size=\"small\" onClick={() => openInNewTab(`https://${isTestNet() ? 'rinkeby.' : ''}etherscan.io/tx/${transaction}`)}>\n          View your transaction on EtherScan\n        </Button>\n        <Button fullWidth sx={{ color: 'white' }} variant=\"contained\" onClick={() => acknowledge()}>\n          OK\n        </Button>\n      </Stack>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { CardContent, Typography, Button, Grid, ButtonGroup } from '@mui/material';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { useMoralis } from 'react-moralis';\n\nexport default function MintingControls({ values, mintAmount, setMintAmount, mintNFT }) {\n  const { Moralis } = useMoralis();\n  const incrementMintAmount = () => setMintAmount(Math.min(values.maxMintAmountPerTx, mintAmount + 1));\n  const decrementMintAmount = () => setMintAmount(Math.max(1, mintAmount - 1));\n  const mintCost = () => Moralis.Units.FromWei(values.tokenPrice, 18) * mintAmount;\n\n  return (\n    <CardContent sx={{ marginTop: '8px' }}>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <ButtonGroup variant=\"contained\">\n            <Button variant=\"contained\" sx={{ color: 'white' }} fullWidth onClick={() => decrementMintAmount()}>\n              -\n            </Button>\n            <Button variant=\"contained\" sx={{ color: 'white' }} fullWidth>{`${mintAmount}`}</Button>\n            <Button variant=\"contained\" sx={{ color: 'white' }} fullWidth onClick={() => incrementMintAmount()}>\n              +\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography mt={0.5} variant=\"body2\" align=\"center\" fontSize={'1rem'} fontWeight={'bold'} color=\"primary\">\n            {`${mintCost().toFixed(3)} ETH`}\n          </Typography>\n          <Typography mt={-0.5} align=\"center\" fontSize={10}>\n            (plus gas)\n          </Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Button fullWidth variant=\"contained\" sx={{ color: 'white' }} onClick={() => mintNFT(mintAmount)} endIcon={<ArrowForwardIcon />}>\n            Mint\n          </Button>\n        </Grid>\n      </Grid>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { Stack, CardContent, Box, LinearProgress, Typography } from '@mui/material';\n\nexport default function LoadingCollectionInfo() {\n  return (\n    <CardContent mt={2}>\n      <Stack spacing={2}>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Loading NFT Collection Information...\n        </Typography>\n        <Box sx={{ width: '100%' }}>\n          <LinearProgress />\n        </Box>\n      </Stack>\n    </CardContent>\n  );\n}\n","import * as React from 'react';\nimport { Stack, CardContent, Typography, Chip, Button, Box, LinearProgress } from '@mui/material';\n\nexport default function TransactionProcessing({ transaction, isTestNet }) {\n  const openInNewTab = (url) => window.open(url, '_blank', 'noopener,noreferrer');\n\n  return (\n    <CardContent mt={2}>\n      <Stack spacing={2}>\n        <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\" align=\"center\">\n          Processing Your Transaction\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Your transaction has been submitted to the Ethereum Network and is waiting to be confirmed!\n        </Typography>\n        <Typography variant=\"body2\" textAlign={'center'}>\n          Your screen will automatically be refreshed when the transaction is completed. This may take up to 5 minutes to complete, so please be patient.\n        </Typography>\n        <Chip sx={{ fontSize: 9 }} label={transaction} />\n        <Button variant=\"contained\" sx={{ color: 'white' }} fullWidth size=\"small\" onClick={() => openInNewTab(`https://${isTestNet() ? 'rinkeby.' : ''}etherscan.io/tx/${transaction}`)}>\n          View your transaction on EtherScan\n        </Button>\n        <Box mt={2} sx={{ width: '100%' }}>\n          <LinearProgress />\n        </Box>\n      </Stack>\n    </CardContent>\n  );\n}\n","// REACT LIBRARIES\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n// UI LIBRARIES\nimport { Card, CardMedia, Stack, Divider, Container } from '@mui/material';\n\n// WEB3 LIBRARIES\nimport { BigNumber } from 'ethers';\nimport { useMoralis, useNativeBalance, useChain } from 'react-moralis';\n\n// DAPP ASSETS\nimport Header from './../Header/Header';\nimport Freelist from '../Utils/Freelist';\nimport Goldlist from '../Utils/Goldlist';\nimport background from '../../assets/background4.png';\nimport XastroLogo from '../../assets/Logos/Xastro.png';\nimport CollectionConfig from '../../Config/CollectionConfig';\n\n// DAPP COMPONENTS\nimport SoldOut from '../Status/SoldOut';\nimport SaleClosed from '../Status/SaleClosed';\nimport WrongNetwork from '../Status/WrongNetwork';\nimport NoContractFond from '../Status/NoContractFound';\nimport NoWalletConnected from '../Status/NoWalletConnected';\nimport SomethingWentWrong from '../Status/SomethingWentWrong';\nimport CollectionInfo from '../CollectionInfo/CollectionInfo';\nimport TransactionComplete from '../Status/TransactionComplete';\nimport MintingControls from '../MintingControls/MintingControls';\nimport LoadingCollectionInfo from '../Status/LoadingCollectionInfo';\nimport ProcessingTransaction from '../Status/ProcessingTransaction';\n\nconst nftContractAbi = require('../../Config/DeixaXastroCollection.json').abi;\n\nconst defaultState = {\n  userAddress: null,\n  userBalance: 0,\n  ownerAddress: null,\n  network: null,\n  networkConfig: null,\n  totalSupply: 0,\n  maxSupply: 0,\n  maxMintAmountPerTx: 0,\n  tokenPrice: BigNumber.from(0),\n  isMintingPaused: null,\n  isFreelistMintEnabled: false,\n  isGoldlistMintEnabled: false,\n  isPreSaleMintEnabled: false,\n  isUserInFreelist: false,\n  isUserInGoldlist: false,\n  nftWallet: [],\n  isReleased: false,\n  saleStage: null,\n  merkleProofManualAddress: '',\n  merkleProofManualAddressFeedbackMessage: null,\n};\n\nfunction App() {\n  const [searchParam, setSearchParam] = useSearchParams();\n  const [promotionCode, setPromotionCode] = useState(searchParam.get('promo'));\n\n  const [error, setError] = useState('');\n  const [mintAmount, setMintAmount] = useState(1);\n  const [values, setValues] = useState(defaultState);\n  const [processing, setProcessing] = useState(false);\n  const [transaction, setTransaction] = useState(null);\n  const [contractFound, setContractFound] = useState(false);\n  const [transactionCompleted, setTransactionCompleted] = useState(false);\n\n  const { chainId } = useChain();\n  const { data: userWallet } = useNativeBalance();\n  const { authenticate, logout, isWeb3Enabled, enableWeb3, isAuthenticated, isWeb3EnableLoading, account, chain, Moralis } = useMoralis();\n\n  let nftContractOptions = {\n    contractAddress: CollectionConfig.contractAddress,\n    abi: nftContractAbi,\n    functionName: null,\n    msgValue: 0,\n  };\n\n  function getProviderParam(providerId) {\n    switch (providerId) {\n      case 'walletconnect':\n        //return { provider: providerId, chainId: parseInt(AppConfig.supportChainId, 16) };\n        return { provider: providerId };\n      //case 'web3Auth':\n      //  return { provider: providerId, clientId: AppConfig.web3AuthClientId, chainId: AppConfig.supportChainId, appLogo: logo };\n      case 'metamask':\n      default:\n        return { provider: providerId };\n    }\n  }\n\n  async function signIn(providerId) {\n    await authenticate({ provider: providerId });\n    localStorage.setItem('local_provider', providerId);\n  }\n\n  async function signOut() {\n    await logout();\n    localStorage.removeItem('local_provider');\n    setValues(() => defaultState);\n  }\n\n  useEffect(() => {\n    async function initialize() {\n      if (isAuthenticated && !isWeb3Enabled && !isWeb3EnableLoading) {\n        await enableWeb3(getProviderParam(localStorage.getItem('local_provider')));\n      }\n      if (isAuthenticated && isWeb3Enabled) {\n        await initWallet();\n      }\n    }\n    initialize();\n\n    const unsubAccountChanged = Moralis.onAccountChanged(function (account) {\n      console.log('Detected an Account Change:', account);\n      window.location.reload();\n    });\n\n    const unsubChainChanged = Moralis.onChainChanged(function (chain) {\n      console.log('Detected a Chain Change:', chain);\n      window.location.reload();\n    });\n\n    return () => {\n      unsubAccountChanged();\n      unsubChainChanged();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAuthenticated, isWeb3Enabled, account, chain]);\n\n  useEffect(() => {\n    //console.log('VALUES', values);\n    //console.log('PARAM', promotionCode);\n  }, [values]);\n\n  async function initWallet() {\n    setProcessing(true);\n\n    setValues(() => defaultState);\n\n    if (!account) {\n      console.log('initWallet: account is null. exiting...');\n      return;\n    }\n\n    let cost = 0;\n    let owner = null;\n    let maxSupply = 0;\n    let totalSupply = 0;\n    let nftWallet = null;\n    let isReleased = false;\n    let maxMintAmountPerTx = 0;\n    let isMintingPaused = true;\n    let isFreelistMintEnabled = false;\n    let isGoldlistMintEnabled = false;\n    let isPreSaleMintEnabled = false;\n\n    // COLLECTION PROPERTIES\n    try {\n      owner = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'owner' });\n      maxSupply = (await Moralis.executeFunction({ ...nftContractOptions, functionName: 'maxSupply' }))?.toNumber();\n      totalSupply = (await Moralis.executeFunction({ ...nftContractOptions, functionName: 'totalSupply' }))?.toNumber();\n      maxMintAmountPerTx = (await Moralis.executeFunction({ ...nftContractOptions, functionName: 'maxMintAmountPerTx' }))?.toNumber();\n      cost = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'cost' });\n      isMintingPaused = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'paused' });\n      isFreelistMintEnabled = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'freeListMintEnabled' });\n      isGoldlistMintEnabled = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'goldListMintEnabled' });\n      isPreSaleMintEnabled = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'preSaleMintEnabled' });\n      isReleased = await Moralis.executeFunction({ ...nftContractOptions, functionName: 'released' });\n      nftWallet = await Moralis.executeFunction({ ...nftContractOptions, params: { _owner: account }, functionName: 'walletOfOwner' });\n    } catch (e) {\n      console.error(e);\n      setContractFound(false);\n      setProcessing(false);\n      return;\n    }\n\n    setValues((prevValues) => ({\n      ...prevValues,\n      userAddress: account.toUpperCase(),\n      ownerAddress: owner.toUpperCase(),\n      maxSupply: maxSupply,\n      totalSupply: totalSupply,\n      maxMintAmountPerTx: maxMintAmountPerTx,\n      tokenPrice: cost,\n      isMintingPaused: isMintingPaused,\n      saleStage: isFreelistMintEnabled ? 'Free List Only' : isGoldlistMintEnabled ? 'Founder List Only' : isPreSaleMintEnabled ? 'First Release' : 'Second Release',\n      isFreelistMintEnabled: isFreelistMintEnabled,\n      isGoldlistMintEnabled: isGoldlistMintEnabled,\n      isPreSaleMintEnabled: isPreSaleMintEnabled,\n      isUserInFreelist: Freelist.contains(account ?? ''),\n      isUserInGoldlist: Goldlist.contains(account ?? ''),\n      isReleased: isReleased,\n      nftWallet: nftWallet,\n    }));\n\n    setContractFound(true);\n    setProcessing(false);\n  }\n\n  // COLLECTION FUNCTIONS\n\n  async function mintNFT(amount) {\n    let tx;\n    const promoCode = promotionCode ? promotionCode : 'deixa';\n\n    try {\n      values.isFreelistMintEnabled\n        ? (tx = await Moralis.executeFunction({\n            ...nftContractOptions,\n            params: { _mintAmount: amount, _merkleProof: Freelist.getProofForAddress(account), _promotionCode: 'deixa' },\n            msgValue: values.tokenPrice.mul(amount),\n            functionName: 'freeListMint',\n          }))\n        : values.isGoldlistMintEnabled\n        ? (tx = await Moralis.executeFunction({\n            ...nftContractOptions,\n            params: { _mintAmount: amount, _merkleProof: Goldlist.getProofForAddress(account), _promotionCode: promoCode },\n            msgValue: values.tokenPrice.mul(amount),\n            functionName: 'goldListMint',\n          }))\n        : (tx = await Moralis.executeFunction({\n            ...nftContractOptions,\n            params: { _mintAmount: amount, _promotionCode: promoCode },\n            msgValue: values.tokenPrice.mul(amount),\n            functionName: 'mint',\n          }));\n\n      setTransaction(tx.hash);\n      setTransactionCompleted(false);\n      setProcessing(true);\n      await tx.wait();\n      setProcessing(false);\n      setTransactionCompleted(true);\n    } catch (e) {\n      console.error(e);\n      setError(e);\n      setProcessing(false);\n    }\n  }\n\n  async function acknowledgeTransaction() {\n    setTransaction(null);\n    setTransactionCompleted(false);\n    await initWallet();\n  }\n\n  const isMainNet = () => chainId === '0x1';\n  const isTestNet = () => chainId === '0x4';\n  const isWalletConnected = () => account !== null && isAuthenticated;\n  const isSoldOut = () => values.maxSupply !== 0 && values.totalSupply >= values.maxSupply;\n  const isPurchaseEnabled = () => isWalletConnected() && !isSoldOut() && !values.isMintingPaused && contractFound && ((values.isReleased && isMainNet()) || (!values.isReleased && !isMainNet()));\n\n  const showNoWalletConnected = () => !processing && !isWalletConnected();\n  const showContractNotFound = () => !processing && isWalletConnected() && !contractFound;\n  const showSomethingWentWrong = () => !processing && error;\n  const showLoadingCollectionInfo = () => processing && !transaction;\n  const showProcessingTransaction = () => processing && transaction && !transactionCompleted;\n  const showTransactionComplete = () => !processing && transactionCompleted;\n  const showCollectionInfo = () => !processing && isWalletConnected() && contractFound && !error && !transactionCompleted;\n  const showMintingControls = () => !processing && isPurchaseEnabled() && !error && !transactionCompleted;\n  const showSaleClosed = () => !processing && values.isMintingPaused && contractFound;\n  const showSoldOut = () => !processing && isSoldOut() && contractFound;\n  const showNotOnMainNet = () => !processing && !values.isReleased && isMainNet();\n  const showNotOnTestNet = () => !processing && values.isReleased && !isMainNet();\n\n  const mintCostInEth = () => Moralis.Units.FromWei(values.tokenPrice, 18) * mintAmount;\n  console.log(`\"${mintCostInEth().toString()}\"`);\n\n  return (\n    <Container disableGutters maxWidth=\"false\">\n      <Header\n        values={values}\n        signOut={signOut}\n        userWallet={userWallet}\n        isTestNet={isTestNet}\n        setError={setError}\n        processing={processing}\n        setProcessing={setProcessing}\n        nftContractOptions={nftContractOptions}\n      />\n      <div\n        style={{\n          position: 'relative',\n          height: '100vh',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundImage: `url(${background})`,\n        }}\n      >\n        <Container fixed={true} maxWidth=\"xs\">\n          <Stack spacing={2} sx={{ overflow: 'visible' }}>\n            {/* MAIN COLLECTION UX */}\n\n            <Card raised={true} elevation={20} sx={{ border: 3, borderColor: 'white', overflow: 'visible' }}>\n              <CardMedia component=\"img\" image={XastroLogo} alt=\"DEIXA Xastro\" sx={{ bgcolor: 'black', py: 2, borderRadius: '4px 4px 0 0' }} />\n\n              {showNoWalletConnected() && <NoWalletConnected signIn={signIn} />}\n\n              {showContractNotFound() && <NoContractFond />}\n\n              {showSomethingWentWrong() && <SomethingWentWrong error={error} setError={setError} />}\n\n              {showLoadingCollectionInfo() && <LoadingCollectionInfo />}\n\n              {showProcessingTransaction() && <ProcessingTransaction transaction={transaction} isTestNet={isTestNet} />}\n\n              {showTransactionComplete() && <TransactionComplete transaction={transaction} acknowledge={acknowledgeTransaction} isTestNet={isTestNet} />}\n\n              {showCollectionInfo() && <CollectionInfo values={values} />}\n\n              <Divider />\n\n              {showMintingControls() && <MintingControls values={values} mintAmount={mintAmount} setMintAmount={setMintAmount} mintNFT={mintNFT} />}\n\n              {/*               <CrossmintPayButton\n                collectionTitle=\"Xastro Origin\"\n                collectionDescription=\"DEIXA Xastro Origin is a collection of 14,444 unique NFTs that are the gateway to an innovative diverse & inclusive community, built around epic reward experiences and obsessed with data privacy, respect and transparency.\"\n                collectionPhoto=\"<COLLECTION_IMAGE_URL>\"\n                clientId=\"9d9a47e1-cf27-4c12-836a-955b4f3dc8f1\"\n                mintConfig={{ type: 'erc-721', totalPrice: `\"${mintCostInEth().toString()}\"`, _mintAmount: `\"${mintAmount.toString()}\"`, _promotionCode: promotionCode ? promotionCode : 'deixa' }}\n                environment=\"staging\"\n              /> */}\n            </Card>\n\n            {/* ADDITIONAL INFO CARDS FOR VARIOUS CONDITIONS */}\n\n            {showSaleClosed() && <SaleClosed />}\n\n            {showSoldOut() && <SoldOut isTestNet={isTestNet} collectionUrl={CollectionConfig.openSeaURL} />}\n\n            {showNotOnMainNet() && <WrongNetwork network={'Ethereum TestNet'} />}\n\n            {showNotOnTestNet() && <WrongNetwork network={'Ethereum MainNet'} />}\n          </Stack>\n        </Container>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport { createTheme } from '@mui/material/styles';\nimport { MoralisProvider } from 'react-moralis';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './Components/App/App';\nimport './index.css';\n\nconst appTheme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#587efc',\n    },\n  },\n});\n\nconst APP_ID = process.env.REACT_APP_MORALIS_APPLICATION_ID;\nconst SERVER_URL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={appTheme}>\n      <MoralisProvider appId={APP_ID} serverUrl={SERVER_URL}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </MoralisProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import freelistAddresses from '../../Config/freelist.json';\nimport { MerkleTree } from 'merkletreejs';\nimport keccak256 from 'keccak256';\n\nexport default new (class Freelist {\n  merkleTree;\n\n  getMerkleTree() {\n    if (this.merkleTree === undefined) {\n      const leafNodes = freelistAddresses.map((addr) => keccak256(addr));\n      this.merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true });\n    }\n    return this.merkleTree;\n  }\n\n  getProofForAddress(address) {\n    return this.getMerkleTree().getHexProof(keccak256(address));\n  }\n\n  getRawProofForAddress(address) {\n    return this.getProofForAddress(address).toString().replaceAll(\"'\", '').replaceAll(' ', '');\n  }\n\n  contains(address) {\n    return this.getMerkleTree().getLeafIndex(Buffer.from(keccak256(address))) >= 0;\n  }\n})();\n","import goldlistAddresses from '../../Config/goldlist.json';\nimport { MerkleTree } from 'merkletreejs';\nimport keccak256 from 'keccak256';\n\nexport default new (class Goldlist {\n  merkleTree;\n\n  getMerkleTree() {\n    if (this.merkleTree === undefined) {\n      const leafNodes = goldlistAddresses.map((addr) => keccak256(addr));\n      this.merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true });\n    }\n    return this.merkleTree;\n  }\n\n  getProofForAddress(address) {\n    return this.getMerkleTree().getHexProof(keccak256(address));\n  }\n\n  getRawProofForAddress(address) {\n    return this.getProofForAddress(address).toString().replaceAll(\"'\", '').replaceAll(' ', '');\n  }\n\n  contains(address) {\n    return this.getMerkleTree().getLeafIndex(Buffer.from(keccak256(address))) >= 0;\n  }\n})();\n"],"sourceRoot":""}